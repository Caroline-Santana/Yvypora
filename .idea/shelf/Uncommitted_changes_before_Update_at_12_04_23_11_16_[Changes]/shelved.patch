Index: app/src/main/java/com/example/yvypora/BuyHistoryActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.yvypora\n\nimport android.content.Intent\nimport android.os.Bundle\nimport androidx.activity.ComponentActivity\nimport androidx.activity.compose.setContent\nimport androidx.compose.foundation.Image\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.clickable\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.foundation.lazy.LazyColumn\nimport androidx.compose.foundation.lazy.items\nimport androidx.compose.material.Card\nimport androidx.compose.material.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.res.colorResource\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.text.font.Font\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport com.example.yvypora.models.MarketerCard\nimport com.example.yvypora.ui.theme.YvyporaTheme\n\nclass BuyHistory : ComponentActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContent {\n            YvyporaTheme {\n                BuyHistoryMain()\n            }\n        }\n\n    }\n}\n\n@Composable\nfun BuyHistoryMain() {\n    Box {\n        Column() {\n            val context = LocalContext.current\n            Column(\n                modifier = Modifier\n                    .fillMaxWidth()\n                    .fillMaxSize()\n            )\n            {\n                Row(\n                    modifier = Modifier\n                        .fillMaxWidth()\n                        .padding(top = 30.dp, start = 15.dp, bottom = 15.dp),\n                    horizontalArrangement = Arrangement.Center,\n                    verticalAlignment = Alignment.CenterVertically\n\n                ) {\n                    Image(\n                        painter = painterResource(id = R.drawable.arrow),\n                        modifier = Modifier\n                            .height(45.dp)\n                            .width(55.dp)\n                            .clickable {\n                                val intent = Intent(context, ProfileClient()::class.java)\n                                context.startActivity(intent)\n                            },\n                        alignment = Alignment.BottomStart,\n                        contentDescription = stringResource(id = R.string.back_screen)\n                    )\n                    Text(\n                        text = stringResource(id = R.string.purchase_history),\n                        modifier = Modifier\n                            .fillMaxWidth(),\n                        fontSize = 24.sp,\n                        textAlign = TextAlign.Center,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n                    )\n                }\n                Column(\n                    Modifier\n                        .fillMaxWidth()\n                        .fillMaxHeight()\n                        .background(Color.Blue)\n                ) {\n                    Row() {\n                        ListOfMarketerCard(marketers = listMarketerCard)\n                    }\n                }\n            }\n        }\n    }\n}\n\n\nval listMarketerCard = listOf<MarketerCard>(\n    MarketerCard(\n        name = \"Barraca do Seu Zé do Alfácil\",\n        sub_name = \"Vila Augusta\",\n        photo = \"https://s2.glbimg.com/kp-KTfD-SKBXxwKd0-76aS0VTVE=/0x0:1280x853/984x0/smart/filters:strip_icc()/i.s3.glbimg.com/v1/AUTH_59edd422c0c84a879bd37670ae4f538a/internal_photos/bs/2017/0/S/BF1BCgRESb0CcCOfMIAA/feira2.jpg\",\n        date = \"15/02/2022\"\n    ),\n    MarketerCard(\n        name = \"Barraca do Seu Zé\",\n        sub_name = \"Vila Madalena\",\n        photo = \"https://s2.glbimg.com/kp-KTfD-SKBXxwKd0-76aS0VTVE=/0x0:1280x853/984x0/smart/filters:strip_icc()/i.s3.glbimg.com/v1/AUTH_59edd422c0c84a879bd37670ae4f538a/internal_photos/bs/2017/0/S/BF1BCgRESb0CcCOfMIAA/feira2.jpg\",\n        date = \"11/02/2022\"\n    )\n)\n\n@Composable\nfun ListOfMarketerCard(marketers: List<MarketerCard>) {\n    LazyColumn() {\n        items(marketers) { marketer -> CardMarketer(marketer = marketer) }\n    }\n}\n\n\n@Composable\nfun CardMarketer(marketer: MarketerCard) {\n    var nameCard = marketer.name\n    var subnameCard = marketer.sub_name\n//    tem que descomentar e usar o que o banco retorna\n//    var photo = marketer.photo\n    var photo = painterResource(id = R.drawable.buy_history_card_marketer)\n    var date = marketer.date\n\n    Card(\n        modifier = Modifier\n            .fillMaxWidth()\n    ) {\n        Row(verticalAlignment = Alignment.CenterVertically) {\n            Image(\n                painter = photo,\n                contentDescription = \"\",\n                modifier = Modifier\n                    .width(160.dp)\n                    .height(160.dp)\n            )\n            Column(\n                modifier =\n                Modifier\n                    .background(Color.Yellow)\n                    .fillMaxWidth(),\n                horizontalAlignment = Alignment.CenterHorizontally\n            ) {\n                Text(\n                    text = nameCard,\n                    fontWeight = FontWeight.Medium,\n                    fontSize = 20.sp\n                )\n                Text(\n                    text = subnameCard,\n                    fontWeight = FontWeight.Light,\n                    fontSize = 16.sp\n                )\n                Text(\n                    text = date,\n                    fontWeight = FontWeight.Bold,\n                    fontSize = 20.sp\n                )\n\n            }\n\n        }\n\n\n    }\n\n}\n\n//@Preview(showBackground = true)\n//@Composable\n//fun BuyPreview() {\n//    BuyHistoryMain()\n//}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/yvypora/BuyHistoryActivity.kt b/app/src/main/java/com/example/yvypora/BuyHistoryActivity.kt
--- a/app/src/main/java/com/example/yvypora/BuyHistoryActivity.kt	(revision 3a055e804219f429ec892a9fbf3226c66b7388be)
+++ b/app/src/main/java/com/example/yvypora/BuyHistoryActivity.kt	(date 1681309010466)
@@ -20,13 +20,12 @@
 import androidx.compose.ui.res.colorResource
 import androidx.compose.ui.res.painterResource
 import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.font.Font
 import androidx.compose.ui.text.font.FontWeight
 import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
 import androidx.compose.ui.unit.sp
 import com.example.yvypora.models.MarketerCard
+import com.example.yvypora.models.ProductCardSale
 import com.example.yvypora.ui.theme.YvyporaTheme
 
 class BuyHistory : ComponentActivity() {
@@ -101,16 +100,34 @@
     MarketerCard(
         name = "Barraca do Seu Zé do Alfácil",
         sub_name = "Vila Augusta",
-        photo = "https://s2.glbimg.com/kp-KTfD-SKBXxwKd0-76aS0VTVE=/0x0:1280x853/984x0/smart/filters:strip_icc()/i.s3.glbimg.com/v1/AUTH_59edd422c0c84a879bd37670ae4f538a/internal_photos/bs/2017/0/S/BF1BCgRESb0CcCOfMIAA/feira2.jpg",
+        photo = R.drawable.buy_history_card_marketer,
         date = "15/02/2022"
     ),
     MarketerCard(
         name = "Barraca do Seu Zé",
         sub_name = "Vila Madalena",
-        photo = "https://s2.glbimg.com/kp-KTfD-SKBXxwKd0-76aS0VTVE=/0x0:1280x853/984x0/smart/filters:strip_icc()/i.s3.glbimg.com/v1/AUTH_59edd422c0c84a879bd37670ae4f538a/internal_photos/bs/2017/0/S/BF1BCgRESb0CcCOfMIAA/feira2.jpg",
+        photo = R.drawable.buy_history_card_marketer,
         date = "11/02/2022"
     )
 )
+val listProductCard = listOf<ProductCardSale>(
+    ProductCardSale(
+        name = "Abobora",
+        qntd_product = 3,
+        photo = 1,
+        type_weight = "g",
+        weight_product = 800,
+        price = 24.00
+    ),
+    ProductCardSale(
+        name = "Abobora",
+        photo = 1,
+        qntd_product = 3,
+        type_weight = "g",
+        weight_product = 800,
+        price = 24.00
+    )
+)
 
 @Composable
 fun ListOfMarketerCard(marketers: List<MarketerCard>) {
@@ -120,6 +137,47 @@
 }
 
 
+@Composable
+fun ListOfProductCardSale(cards : List<ProductCardSale>){
+    LazyColumn(){
+        items(cards){card -> CardProduct(card) }
+    }
+}
+@Composable
+fun CardProduct(card:ProductCardSale){
+    var nameProduct = card.name
+//    var photoProduct = card.photo
+    var photoProduct = painterResource(id = R.drawable.abobora)
+    var qntProduct = card.qntd_product
+    var typeProduct = card.type_weight
+    var weightProduct = card.weight_product
+    var priceProduct = card.price
+
+    Card(Modifier.fillMaxWidth()) {
+        Row(){
+            Column() {
+                Text(text = nameProduct)
+                Image(painter = photoProduct,
+                    contentDescription = "",
+                    modifier = Modifier
+                        .width(100.dp)
+                        .height(150.dp)
+                )
+
+            }
+            Column() {
+               Text(text = qntProduct.toString()) 
+               Text(text = typeProduct)
+               Text(text = priceProduct.toString())
+            }
+        }
+        
+        
+    }
+
+}
+
+
 @Composable
 fun CardMarketer(marketer: MarketerCard) {
     var nameCard = marketer.name
@@ -131,7 +189,7 @@
 
     Card(
         modifier = Modifier
-            .fillMaxWidth()
+            .fillMaxWidth(),
     ) {
         Row(verticalAlignment = Alignment.CenterVertically) {
             Image(
@@ -144,33 +202,32 @@
             Column(
                 modifier =
                 Modifier
-                    .background(Color.Yellow)
                     .fillMaxWidth(),
                 horizontalAlignment = Alignment.CenterHorizontally
             ) {
                 Text(
                     text = nameCard,
                     fontWeight = FontWeight.Medium,
-                    fontSize = 20.sp
+                    fontSize = 20.sp,
+                    color = colorResource(id = R.color.green_yvy)
                 )
                 Text(
                     text = subnameCard,
                     fontWeight = FontWeight.Light,
-                    fontSize = 16.sp
+                    fontSize = 16.sp,
+                    color = colorResource(id = R.color.green_yvy)
+
                 )
                 Text(
                     text = date,
                     fontWeight = FontWeight.Bold,
-                    fontSize = 20.sp
+                    fontSize = 20.sp,
+                    color = colorResource(id = R.color.green_options)
                 )
-
             }
-
+            ListOfProductCardSale(cards = listProductCard)
         }
-
-
     }
-
 }
 
 //@Preview(showBackground = true)
Index: app/src/main/java/com/example/yvypora/models/MarketerCard.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.yvypora.models\n\nimport java.util.Calendar\nimport java.util.Date\n\ndata class MarketerCard(\n    val name: String,\n    val sub_name: String,\n    val photo: String,\n    val date: String\n)\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/yvypora/models/MarketerCard.kt b/app/src/main/java/com/example/yvypora/models/MarketerCard.kt
--- a/app/src/main/java/com/example/yvypora/models/MarketerCard.kt	(revision 25bcc7b744fac661c384c219d882d73138ddca70)
+++ b/app/src/main/java/com/example/yvypora/models/MarketerCard.kt	(date 1681299289900)
@@ -1,12 +1,12 @@
 package com.example.yvypora.models
 
-import java.util.Calendar
-import java.util.Date
+import android.graphics.Bitmap
+import androidx.compose.ui.graphics.ImageBitmap
 
 data class MarketerCard(
     val name: String,
     val sub_name: String,
-    val photo: String,
+    val photo: Int,
     val date: String
 )
 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_04_04_2023_07_44_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_04_04_2023_07_44_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_04_04_2023_07_44_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_04_04_2023_07_44_[Changes]/shelved.patch	(revision 25bcc7b744fac661c384c219d882d73138ddca70)
+++ /dev/null	(revision 25bcc7b744fac661c384c219d882d73138ddca70)
@@ -1,19 +0,0 @@
-Index: app/src/main/java/com/example/yvypora/InicialScreen.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>@file:OptIn(ExperimentalPagerApi::class)\r\n\r\npackage com.example.yvypora\r\n\r\n\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.widget.RatingBar\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.compose.animation.core.tween\r\nimport androidx.compose.foundation.*\r\nimport androidx.compose.foundation.gestures.Orientation\r\nimport androidx.compose.foundation.gestures.rememberScrollableState\r\nimport androidx.compose.foundation.gestures.scrollable\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.foundation.lazy.LazyRow\r\nimport androidx.compose.foundation.lazy.items\r\nimport androidx.compose.foundation.shape.CircleShape\r\nimport androidx.compose.foundation.shape.CornerSize\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.graphics.graphicsLayer\r\nimport androidx.compose.ui.layout.ContentScale\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.colorResource\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.res.stringResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.style.TextAlign\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.compose.ui.util.lerp\r\nimport androidx.compose.ui.viewinterop.AndroidView\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.currentBackStackEntryAsState\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.yvypora.model.template\r\nimport com.example.yvypora.models.Product\r\nimport com.example.yvypora.navbar.ItemsMenu\r\nimport com.example.yvypora.navbar.NavigationHost\r\nimport com.example.yvypora.ui.theme.YvyporaTheme\r\nimport com.google.accompanist.pager.*\r\nimport kotlinx.coroutines.CoroutineScope\r\nimport kotlinx.coroutines.delay\r\nimport kotlinx.coroutines.launch\r\nimport kotlinx.coroutines.yield\r\nimport kotlin.math.absoluteValue\r\n\r\nclass InicialScreen : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContent {\r\n            YvyporaTheme {\r\n                HomeScreen()\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun Header() {\r\n    Row(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .height(55.dp)\r\n            .padding(top = 40.dp, start = 15.dp, end = 15.dp),\r\n        horizontalArrangement = Arrangement.SpaceBetween,\r\n    ) {\r\n        Image(\r\n            painter = painterResource(id = R.drawable.logo_no_name),\r\n            modifier = Modifier\r\n                .height(58.dp)\r\n                .width(55.dp),\r\n            alignment = Alignment.BottomStart,\r\n            contentDescription = \"logo\",\r\n\r\n            )\r\n        Image(\r\n            painter = painterResource(id = R.drawable.icon_user),\r\n            modifier = Modifier\r\n                .height(50.dp)\r\n                .width(55.dp),\r\n\r\n            contentDescription = \"logo\",\r\n\r\n            )\r\n    }\r\n}\r\n\r\n@OptIn(ExperimentalPagerApi::class)\r\n@Composable\r\nfun UpsideLayout() {\r\n    val offset = remember { mutableStateOf(0f) }\r\n    var searchState by remember {\r\n        mutableStateOf(\"\")\r\n    }\r\n    Column(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .fillMaxSize()\r\n            .padding(top = 125.dp)\r\n            .scrollable(state = rememberScrollableState() { delta ->\r\n                offset.value = offset.value + delta\r\n                delta // indicate that we consumed all the pixels available\r\n            }, orientation = Orientation.Vertical),\r\n        horizontalAlignment = Alignment.CenterHorizontally\r\n    ) {\r\n        OutlinedTextField(value = searchState,\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .height(45.dp)\r\n                .padding(start = 25.dp, end = 25.dp),\r\n            onValueChange = {\r\n                searchState = it\r\n            },\r\n            colors = TextFieldDefaults.textFieldColors(\r\n                backgroundColor = colorResource(id = R.color.transparentgreen_yvy),\r\n                focusedIndicatorColor = colorResource(id = R.color.green_yvy),\r\n                unfocusedIndicatorColor = colorResource(id = R.color.transparentgreen_yvy),\r\n                cursorColor = colorResource(id = R.color.darkgreen_yvy)\r\n            ),\r\n            shape = RoundedCornerShape(20.dp),\r\n            trailingIcon = {\r\n                Icon(\r\n                    painter = painterResource(R.drawable.lupa_icon),\r\n                    contentDescription = stringResource(id = R.string.lupa),\r\n                    modifier = Modifier\r\n                        .width(35.dp)\r\n                        .height(35.dp)\r\n                        .padding(end = 10.dp),\r\n                    tint = Color.White\r\n                )\r\n            })\r\n        Spacer(\r\n            modifier = Modifier.height(15.dp)\r\n        )\r\n        // Função dos atalhos para outras telas\r\n        Shortcuts()\r\n\r\n    }\r\n\r\n    AutoSliding()\r\n    TabLayoutScreen()\r\n\r\n\r\n}\r\n\r\n@Composable\r\nfun HomeScreen() {\r\n   val navController = rememberNavController()\r\n    val scaffoldState = rememberScaffoldState()\r\n    val scope = rememberCoroutineScope()\r\n    val navigation_item = listOf(\r\n        ItemsMenu.Pantalla1,\r\n        ItemsMenu.Pantalla2,\r\n        ItemsMenu.Pantalla3,\r\n        ItemsMenu.Pantalla4,\r\n    )\r\n    \r\n    Scaffold(\r\n        scaffoldState = scaffoldState,\r\n        bottomBar = { NavegationInferior(navController,navigation_item)},\r\n        floatingActionButton = {Fab(scope,scaffoldState)}\r\n    )\r\n\r\n    {\r\n        it.toString()\r\n        NavigationHost(navController)\r\n    }\r\n}\r\n\r\n@Composable\r\nfun Fab(scope: CoroutineScope, scaffoldState: ScaffoldState) {\r\n            FloatingActionButton(\r\n                onClick = {\r\n                    scope.launch { scaffoldState.snackbarHostState\r\n                        .showSnackbar(\"blbla\",\r\n                            actionLabel = \"bsljdjsskd\",\r\n                            duration = SnackbarDuration.Indefinite) }\r\n            },\r\n            backgroundColor = colorResource(id = R.color.green_yvy)\r\n\r\n                ) {\r\n                    Icon(painter = painterResource(id = R.drawable.shopping_cart) , contentDescription = \"shopping\" )\r\n            }\r\n}\r\n\r\n@Composable\r\nfun currentRoute(navController: NavHostController): String?{\r\n    val entrada by navController.currentBackStackEntryAsState()\r\n    return entrada?.destination?.route\r\n}\r\n\r\n@Composable\r\nfun NavegationInferior(navController: NavHostController, menu_items: List<ItemsMenu>) \r\n{\r\n    BottomAppBar() {\r\n        BottomNavigation()\r\n        {\r\n            val currentRoute = currentRoute(navController = navController)\r\n            menu_items.forEach{ item ->\r\n                BottomNavigationItem(\r\n                    selected = currentRoute == item.rota,\r\n                    onClick = { navController.navigate(item.rota) },\r\n                    icon = {\r\n                        Icon(painter = painterResource(id = item.icon), contentDescription = \"\")\r\n                    },\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n@Composable\r\nfun TabLayoutScreen() {\r\n\r\n    val tabData = listOf(\r\n        stringResource(id = R.string.all),\r\n        stringResource(id = R.string.discount),\r\n        stringResource(id = R.string.near)\r\n    )\r\n    val pagerState = rememberPagerState(\r\n        pageCount = tabData.size,\r\n        initialOffscreenLimit = 2,\r\n        infiniteLoop = true,\r\n        initialPage = 1,\r\n    )\r\n    val tabIndex = pagerState.currentPage\r\n    val coroutineScope = rememberCoroutineScope()\r\n    Column(\r\n        modifier = Modifier.padding(top = 552.dp)\r\n    ) {\r\n        TabRow(\r\n            selectedTabIndex = tabIndex,\r\n            indicator = { tabPositions ->\r\n                TabRowDefaults.Indicator(\r\n                    Modifier.pagerTabIndicatorOffset(pagerState, tabPositions)\r\n                )\r\n            },\r\n            backgroundColor = Color.Unspecified,\r\n            contentColor = colorResource(id = R.color.green_yvy),\r\n\r\n            ) {\r\n            tabData.forEachIndexed { index, pair ->\r\n                Tab(\r\n                    selected = tabIndex == index,\r\n                    onClick = {\r\n                        coroutineScope.launch {\r\n                            pagerState.animateScrollToPage(index)\r\n                        }\r\n                    },\r\n                    text = {\r\n                        Text(\r\n                            text = tabData[index],\r\n                        )\r\n                    },\r\n                    selectedContentColor = colorResource(id = R.color.green_yvy),\r\n                    unselectedContentColor = colorResource(id = R.color.darkgreen_yvy),\r\n                )\r\n            }\r\n        }\r\n        HorizontalPager(\r\n            state = pagerState, modifier = Modifier.weight(1f)\r\n        ) { index ->\r\n            Column(\r\n                modifier = Modifier\r\n                    .fillMaxSize()\r\n                    .padding(10.dp),\r\n                verticalArrangement = Arrangement.Center,\r\n                horizontalAlignment = Alignment.CenterHorizontally\r\n            ) {\r\n                when (tabIndex) {\r\n                    0 -> ListOfProducts(products = list)\r\n                    1 -> ListOfProducts(products = list)\r\n                    2 -> ListOfProducts(products = list)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// MOCKEAD\r\n// TODO PEGAR A LISTA\r\n\r\nval list = listOf<Product>(\r\n    Product(\r\n        name = \"Abobrinha\",\r\n        photo = \"https://conteudo.imguol.com.br/c/entretenimento/5c/2019/04/25/abobrinha-1556223714538_v2_450x337.jpg\",\r\n        price = 6.00F,\r\n        qtdeProduct = 200\r\n    ), Product(\r\n        name = \"Abobrinha\",\r\n        photo = \"https://conteudo.imguol.com.br/c/entretenimento/5c/2019/04/25/abobrinha-1556223714538_v2_450x337.jpg\",\r\n        price = 6.00F,\r\n        qtdeProduct = 200\r\n    ), Product(\r\n        name = \"Abobrinha\",\r\n        photo = \"https://conteudo.imguol.com.br/c/entretenimento/5c/2019/04/25/abobrinha-1556223714538_v2_450x337.jpg\",\r\n        price = 6.00F,\r\n        qtdeProduct = 200\r\n    ), Product(\r\n        name = \"Abobrinha\",\r\n        photo = \"https://conteudo.imguol.com.br/c/entretenimento/5c/2019/04/25/abobrinha-1556223714538_v2_450x337.jpg\",\r\n        price = 6.00F,\r\n        qtdeProduct = 200\r\n    ), Product(\r\n        name = \"Abobrinha\",\r\n        photo = \"https://conteudo.imguol.com.br/c/entretenimento/5c/2019/04/25/abobrinha-1556223714538_v2_450x337.jpg\",\r\n        price = 6.00F,\r\n        qtdeProduct = 200\r\n    )\r\n)\r\n\r\n@Composable\r\nfun ListOfProducts(products: List<Product>) {\r\n    LazyRow(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .height(200.dp),\r\n        contentPadding = PaddingValues(0.dp),\r\n    ) {\r\n        items(products) { product -> CardProducts(product) }\r\n    }\r\n}\r\n\r\n\r\n// TODO COMPONENETE DE LISTA --> CARD PRODUCTS\r\n@Composable\r\nfun CardProducts(data: Product) {\r\n    var titleCard = data.name\r\n    var photoProduct = painterResource(id = R.drawable.abobrinha)\r\n    var qtdeProduct = data.qtdeProduct.toString() + \"g\"\r\n    var priceProduct = \"R$\" + data.price.toString()\r\n    Card(\r\n        elevation = 10.dp,\r\n        contentColor = colorResource(id = R.color.darkgreen_yvy),\r\n        modifier = Modifier\r\n            .width(130.dp)\r\n            .height(140.dp),\r\n        border = BorderStroke(1.dp, colorResource(id = R.color.green_yvy))\r\n\r\n    ) {\r\n        Column {\r\n            Column(\r\n                modifier = Modifier.fillMaxWidth(),\r\n                horizontalAlignment = Alignment.CenterHorizontally\r\n            ) {\r\n                Text(\r\n                    text = titleCard,\r\n                    modifier = Modifier.padding(top = 4.dp),\r\n                    fontWeight = FontWeight.Bold,\r\n                    fontSize = 14.sp\r\n                )\r\n                // MODIFICAR PARA USAR URL\r\n                Image(\r\n                    painter = photoProduct,\r\n                    contentDescription = \"Product\",\r\n                    modifier = Modifier\r\n                        .width(97.dp)\r\n                        .height(70.dp),\r\n                )\r\n            }\r\n            Box(modifier = Modifier.fillMaxWidth()) {\r\n                Text(\r\n                    text = qtdeProduct,\r\n                    modifier = Modifier.padding(top = 2.dp, start = 4.dp),\r\n                    color = colorResource(id = R.color.dark_gray),\r\n                    fontWeight = FontWeight.Bold,\r\n                    textAlign = TextAlign.Left,\r\n                    fontSize = 12.sp\r\n                )\r\n\r\n                Row(\r\n                    horizontalArrangement = Arrangement.Center\r\n                ) {\r\n                    Text(\r\n                        text = priceProduct,\r\n                        modifier = Modifier.padding(top = 20.dp, start = 12.dp, end = 15.dp),\r\n                        fontWeight = FontWeight.Bold,\r\n                        textAlign = TextAlign.Left,\r\n                        fontSize = 14.sp\r\n                    )\r\n                    OutlinedButton(\r\n                        onClick = { },\r\n                        modifier = Modifier.size(40.dp),\r\n                        shape = CircleShape,\r\n                        border = BorderStroke(5.dp, colorResource(id = R.color.darkgreen_yvy)),\r\n                        contentPadding = PaddingValues(0.dp),\r\n                        colors = ButtonDefaults.outlinedButtonColors(\r\n                            backgroundColor = colorResource(\r\n                                id = R.color.darkgreen_yvy\r\n                            )\r\n                        )\r\n                    ) {\r\n                        // Adding an Icon \"Add\" inside the Button\r\n                        Icon(\r\n                            painter = painterResource(id = R.drawable.shopping_cart),\r\n                            contentDescription = \"content description\",\r\n                            tint = Color.White\r\n                        )\r\n                    }\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun Shortcuts() {\r\n    Row(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .padding(start = 25.dp, end = 25.dp),\r\n        horizontalArrangement = Arrangement.SpaceBetween\r\n    ) {\r\n        Image(\r\n            painter = painterResource(id = R.drawable.fruits_category_icon),\r\n            modifier = Modifier\r\n                .height(80.dp)\r\n                .width(70.dp),\r\n            contentDescription = \"Fruit\"\r\n        )\r\n        Image(\r\n            painter = painterResource(id = R.drawable.vegetables_category_icon),\r\n            modifier = Modifier\r\n                .height(80.dp)\r\n                .width(70.dp),\r\n            contentDescription = \"Vegetables\"\r\n        )\r\n        Image(\r\n            painter = painterResource(id = R.drawable.spices_category_icon),\r\n            modifier = Modifier\r\n                .height(80.dp)\r\n                .width(70.dp),\r\n            contentDescription = \"Spices\"\r\n        )\r\n        Image(\r\n            painter = painterResource(id = R.drawable.others_category_icon),\r\n            modifier = Modifier\r\n                .height(80.dp)\r\n                .width(70.dp),\r\n            contentDescription = \"Others\"\r\n        )\r\n\r\n    }\r\n\r\n    Row(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .padding(start = 25.dp, end = 25.dp),\r\n        horizontalArrangement = Arrangement.SpaceBetween\r\n    ) {\r\n        Text(\r\n            text = stringResource(id = R.string.fruits),\r\n            modifier = Modifier\r\n                .height(80.dp)\r\n                .width(70.dp),\r\n            fontSize = 16.sp,\r\n            textAlign = TextAlign.Center\r\n        )\r\n        Text(\r\n            text = stringResource(id = R.string.vegetable),\r\n            modifier = Modifier\r\n                .height(80.dp)\r\n                .width(70.dp),\r\n            fontSize = 16.sp,\r\n            textAlign = TextAlign.Center\r\n        )\r\n        Text(\r\n            text = stringResource(id = R.string.spices),\r\n            modifier = Modifier\r\n                .height(80.dp)\r\n                .width(70.dp),\r\n            fontSize = 16.sp,\r\n            textAlign = TextAlign.Center\r\n        )\r\n        Text(\r\n            text = stringResource(id = R.string.other),\r\n            modifier = Modifier\r\n                .height(80.dp)\r\n                .width(70.dp),\r\n            fontSize = 16.sp,\r\n            textAlign = TextAlign.Center\r\n        )\r\n    }\r\n}\r\n\r\n@ExperimentalPagerApi\r\n@Composable\r\nfun AutoSliding() {\r\n    val pagerState = rememberPagerState(pageCount = template.size, initialOffscreenLimit = 2)\r\n\r\n    LaunchedEffect(Unit) {\r\n        while (true) {\r\n            yield()\r\n            delay(2000)\r\n            pagerState.animateScrollToPage(\r\n                page = (pagerState.currentPage + 1) % (pagerState.pageCount),\r\n                animationSpec = tween(600)\r\n            )\r\n        }\r\n    }\r\n\r\n    Column(modifier = Modifier.padding(top = 60.dp)) {\r\n        HorizontalPager(\r\n            state = pagerState, modifier = Modifier.weight(1f)\r\n        ) { page ->\r\n            Card(modifier = Modifier\r\n                .graphicsLayer {\r\n                    val pageOffset = calculateCurrentOffsetForPage(page).absoluteValue\r\n                    lerp(\r\n                        start = 0.85f, stop = 1f, fraction = 1f - pageOffset.coerceIn(0f, 1f)\r\n                    ).also { scale ->\r\n                        scaleX = scale\r\n                        scaleY = scale\r\n                    }\r\n\r\n                }\r\n                .fillMaxWidth()\r\n                .height(195.dp)\r\n                .padding(15.dp, 0.dp, 15.dp, 0.dp),\r\n                shape = RoundedCornerShape(20.dp)) {\r\n                val template = template[page]\r\n                Box(\r\n                    modifier = Modifier\r\n                        .fillMaxSize()\r\n                        .width(130.dp)\r\n                        .align(Alignment.Center)\r\n                ) {\r\n                    Image(\r\n                        painter = painterResource(\r\n                            id = when (page) {\r\n                                1 -> R.drawable.logo\r\n                                2 -> R.drawable.ofertas\r\n                                3 -> R.drawable.ofertas\r\n                                4 -> R.drawable.ofertas\r\n                                5 -> R.drawable.ofertas\r\n                                else -> R.drawable.logo\r\n                            }\r\n                        ),\r\n                        contentDescription = \"Image\",\r\n                        contentScale = ContentScale.Crop,\r\n                        modifier = Modifier.fillMaxSize()\r\n                    )\r\n\r\n                    Column(\r\n                        modifier = Modifier\r\n                            .align(Alignment.BottomStart)\r\n                            .padding(15.dp)\r\n                    ) {\r\n                        val ratingBar = RatingBar(\r\n                            LocalContext.current,\r\n                            null,\r\n                            androidx.appcompat.R.attr.ratingBarStyleSmall\r\n                        ).apply {\r\n                            rating = template.rating\r\n                        }\r\n                        AndroidView(\r\n                            factory = { ratingBar },\r\n                            modifier = Modifier.padding(0.dp, 8.dp, 0.dp, 0.dp)\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n            HorizontalPagerIndicator(\r\n                pagerState = pagerState,\r\n                modifier = Modifier.padding(top = 235.dp),\r\n                activeColor = colorResource(id = R.color.darkgreen_yvy),\r\n                inactiveColor = colorResource(id = R.color.transparentgreen_yvy)\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/yvypora/InicialScreen.kt b/app/src/main/java/com/example/yvypora/InicialScreen.kt
---- a/app/src/main/java/com/example/yvypora/InicialScreen.kt	(revision b6516b0c661bca4d5b2f0e500be2e235ce5d76ef)
-+++ b/app/src/main/java/com/example/yvypora/InicialScreen.kt	(date 1680605044687)
-@@ -93,7 +93,7 @@
-     }
- }
- 
--@OptIn(ExperimentalPagerApi::class)
-+
- @Composable
- fun UpsideLayout() {
-     val offset = remember { mutableStateOf(0f) }
Index: .idea/shelf/Uncommitted_changes_before_Update_at_04_04_2023_07_44__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_04_04_2023_07_44__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_04_04_2023_07_44__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_04_04_2023_07_44__Changes_.xml	(revision 25bcc7b744fac661c384c219d882d73138ddca70)
+++ /dev/null	(revision 25bcc7b744fac661c384c219d882d73138ddca70)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_04_04_2023_07_44_[Changes]" date="1680605048938" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_04_04_2023_07_44_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 04/04/2023 07:44 [Changes]" />
-</changelist>
\ No newline at end of file
Index: app/src/main/java/com/example/yvypora/models/ProductCardSale.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/yvypora/models/ProductCardSale.kt b/app/src/main/java/com/example/yvypora/models/ProductCardSale.kt
new file mode 100644
--- /dev/null	(date 1681300773160)
+++ b/app/src/main/java/com/example/yvypora/models/ProductCardSale.kt	(date 1681300773160)
@@ -0,0 +1,10 @@
+package com.example.yvypora.models
+
+data class ProductCardSale(
+    val name : String,
+    val photo : Int,
+    val qntd_product : Int,
+    val type_weight: String,
+    val weight_product : Int,
+    val price : Double
+)
Index: app/src/main/res/values-pt-rBR/stringsBR.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <string name=\"app_name\">Yvypora</string>\n    <string name=\"title_activity_main\">MainActivity</string>\n    <string name=\"title_activity_main2\">MainActivity2</string>\n    <string name=\"slogan\">\"Encontre sua feira de onde estiver\"</string>\n    <string name=\"yvypora\">\"yvyporã\"</string>\n    <string name=\"login\">\"Login\"</string>\n    <string name=\"enter\">\"Entrar\"</string>\n    <string name=\"question\">\"Não possui uma conta?\"</string>\n    <string name=\"register\">\"Cadastre-se\"</string>\n    <string name=\"name\">\"Nome:\"</string>\n    <string name=\"email\">\"Email:\"</string>\n    <string name=\"name_error\">\"Informe um nome de usuário!\"</string>\n    <string name=\"email_error\">\"Informe um email válido!\"</string>\n    <string name=\"icon_content_description\">\"Caixa de vegetais\"</string>\n    <string name=\"title1_activity_decision_sreen\">Bem-vindo(a) ao</string>\n    <string name=\"title_activity_decision_sreen\">Welcome to</string>\n    <string name=\"title2_activity_decision_sreen\">a sua feira digital</string>\n    <string name=\"question_decision_sreen\">Como você usuará o aplicativo?</string>\n    <string name=\"decision_option1\">CLIENTE</string>\n    <string name=\"title_activity_login\">LoginActivity</string>\n    <string name=\"prompt_email\">Email</string>\n    <string name=\"prompt_password\">Password</string>\n    <string name=\"action_sign_in\">Sign in or register</string>\n    <string name=\"action_sign_in_short\">Sign in</string>\n    <string name=\"welcome\">\"Welcome !\"</string>\n    <string name=\"invalid_username\">Not a valid username</string>\n    <string name=\"invalid_password\">Password must be >5 characters</string>\n    <string name=\"login_failed\">\"Login failed\"</string>\n    <string name=\"decision_option2\">FEIRANTE</string>\n    <string name=\"password\">Senha:</string>\n    <string name=\"message_error_pass1\">Informe uma senha!</string>\n    <string name=\"message_error_pass2\">Não pode ter mais de 8 caracteres!</string>\n    <string name=\"profile_picture\">Adicione uma foto de perfil</string>\n    <string name=\"title_cpf\">CPF</string>\n    <string name=\"cpf_error_empty\">Informe um CPF!</string>\n    <string name=\"cpf_error_invalid\">CPF inválido !</string>\n    <string name=\"title_cep\">CEP</string>\n    <string name=\"cep_error_empty\">Informe um CEP!</string>\n    <string name=\"cep_error_invalid\">CEP inválido!</string>\n    <string name=\"button_register\">Cadastrar</string>\n    <string name=\"title_activity_register_marketer\">RegisterMarketer</string>\n    <string name=\"name_tent\">Nome da barraca</string>\n    <string name=\"phone_tent\">Telefone da barraca</string>\n    <string name=\"date_of_birth\">Data de nascimento</string>\n    <string name=\"title_phone\">Telefone</string>\n    <string name=\"phone_error_empty\">Informe um telefone!</string>\n    <string name=\"title_activity_inicial_screen\">InicialScreen</string>\n    <string name=\"title_cnpj\">CNPJ</string>\n    <string name=\"cnpj_error_empty\">Informe um CNPJ!</string>\n    <string name=\"cnpj_error_invalid\">CNPJ inválido!</string>\n    <string name=\"gender_f\">Feminino</string>\n    <string name=\"gender_m\">Masculino</string>\n    <string name=\"lupa\">Lupa</string>\n    <string name=\"fruits\">Frutas</string>\n    <string name=\"vegetable\">Vegetais</string>\n    <string name=\"spices\">Temperos</string>\n    <string name=\"other\">Outros</string>\n    <string name=\"isBirthErrorEmpty\">Informe sua data de nascimento!</string>\n    <string name=\"titleBirth\">Data de nascimento</string>\n    <string name=\"all\">Todos</string>\n    <string name=\"discount\">Em desconto</string>\n    <string name=\"near\">Perto de você</string>\n    <string name=\"home\">Icone home</string>\n    <string name=\"profile\">Icone perfil</string>\n    <string name=\"fair\">Icone feira</string>\n    <string name=\"live\">Icone live</string>\n    <string name=\"title_activity_screen_search\">ScreenSearch</string>\n    <string name=\"back_screen\">Atalho para mudar de tela</string>\n    <string name=\"latest_search\">Últimas pesquisas</string>\n    <string name=\"delete_search\">Deletar uma pesquisa</string>\n    <string name=\"title_activity_profile_client\">ProfileClient</string>\n    <string name=\"photo_profile\">Foto de perfil</string>\n    <string name=\"address\">Endereço</string>\n    <string name=\"edit_account\">Editar conta</string>\n    <string name=\"payment_methods\">Formas de pagamento</string>\n    <string name=\"purchase_history\">Histórico de compra</string>\n    <string name=\"logout\">Sair</string>\n    <string name=\"title_activity_edit_profile_sreen\">EditProfileSreen</string>\n    <string name=\"to_save\">Salvar</string>\n    <string name=\"title_activity_address\">AddressActivity</string>\n    <string name=\"title_activity_adresses\">AdressesActivity</string>\n    <string name=\"adresses\">Endereços</string>\n    <string name=\"main_adresses\">Endereço principal</string>\n    <string name=\"add_new_adress\">Adcione novos endereços clicando a baixo:</string>\n    <string name=\"to_add\">Adicionar</string>\n    <string name=\"title_activity_add_adress_acitivity\">AddAdressAcitivity</string>\n    <string name=\"choose_location\">Escolha o local</string>\n    <string name=\"details_address\">Detalhes do endereço</string>\n    <string name=\"name_address\">Nome do endereço</string>\n    <string name=\"name_of_recipient\">Nome de quem vai receber</string>\n    <string name=\"phone_address\">Telefone para contato</string>\n    <string name=\"cep_address\">CEP</string>\n<<<<<<< HEAD\n    <string name=\"title_activity_buy_history_acitivity\">Histórico de Compras</string>\n\n=======\n    <string name=\"title_activity_payment_methods\">PaymentMethodsActivity</string>\n    <string name=\"title_payment_methods\">Formas de pagamento</string>\n    <string name=\"credit_card\">Cartão de crédito</string>\n    <string name=\"title_activity_add_pay_methods_acitivity\">AddPayMethodsAcitivity</string>\n    <string name=\"add_card_pay_methods\">Adicionar seu cartão</string>\n    <string name=\"name_card_pay_methods\">Nome no cartão</string>\n    <string name=\"number_card_pay_methods\">Número do cartão</string>\n    <string name=\"validity_card_pay_methods\">Data de validade</string>\n    <string name=\"add_card\">Add. cartão</string>\n    <string name=\"add_account\">Add. conta</string>\n    <string name=\"title_activity_add_account\">AddAccount</string>\n    <string name=\"add_account_pay_methods\">Adcionar sua conta</string>\n>>>>>>> 2b832a5c27678f5baa61a651134611ac21368997\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-pt-rBR/stringsBR.xml b/app/src/main/res/values-pt-rBR/stringsBR.xml
--- a/app/src/main/res/values-pt-rBR/stringsBR.xml	(revision 25bcc7b744fac661c384c219d882d73138ddca70)
+++ b/app/src/main/res/values-pt-rBR/stringsBR.xml	(date 1681296946671)
@@ -92,10 +92,10 @@
     <string name="name_of_recipient">Nome de quem vai receber</string>
     <string name="phone_address">Telefone para contato</string>
     <string name="cep_address">CEP</string>
-<<<<<<< HEAD
+
     <string name="title_activity_buy_history_acitivity">Histórico de Compras</string>
 
-=======
+
     <string name="title_activity_payment_methods">PaymentMethodsActivity</string>
     <string name="title_payment_methods">Formas de pagamento</string>
     <string name="credit_card">Cartão de crédito</string>
@@ -108,6 +108,6 @@
     <string name="add_account">Add. conta</string>
     <string name="title_activity_add_account">AddAccount</string>
     <string name="add_account_pay_methods">Adcionar sua conta</string>
->>>>>>> 2b832a5c27678f5baa61a651134611ac21368997
+
 
 </resources>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n  <component name=\"GradleSettings\">\n    <option name=\"linkedExternalProjectsSettings\">\n      <GradleProjectSettings>\n        <option name=\"testRunner\" value=\"GRADLE\" />\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"gradleJvm\" value=\"Embedded JDK\" />\n        <option name=\"modules\">\n          <set>\n            <option value=\"$PROJECT_DIR$\" />\n            <option value=\"$PROJECT_DIR$/app\" />\n          </set>\n        </option>\n      </GradleProjectSettings>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 25bcc7b744fac661c384c219d882d73138ddca70)
+++ b/.idea/gradle.xml	(date 1681295884187)
@@ -7,7 +7,7 @@
         <option name="testRunner" value="GRADLE" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
-        <option name="gradleJvm" value="Embedded JDK" />
+        <option name="gradleJvm" value="11" />
         <option name="modules">
           <set>
             <option value="$PROJECT_DIR$" />
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Embedded JDK\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 25bcc7b744fac661c384c219d882d73138ddca70)
+++ b/.idea/misc.xml	(date 1681295884183)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="Embedded JDK" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" project-jdk-name="11" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
