<<<<<<< HEAD
Index: app/src/main/java/com/example/yvypora/ScreenClients/ResultSearch.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.yvypora.ScreenClients\n\n\nimport android.content.Intent\nimport android.graphics.drawable.shapes.Shape\nimport android.os.Bundle\nimport androidx.activity.ComponentActivity\nimport androidx.activity.compose.setContent\nimport androidx.compose.animation.AnimatedVisibility\nimport androidx.compose.animation.animateContentSize\nimport androidx.compose.animation.core.LinearOutSlowInEasing\nimport androidx.compose.animation.core.animateFloatAsState\nimport androidx.compose.animation.core.tween\nimport androidx.compose.foundation.BorderStroke\nimport androidx.compose.foundation.Image\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.clickable\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.foundation.text.KeyboardOptions\nimport androidx.compose.material.*\nimport androidx.compose.runtime.*\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.platform.LocalDensity\nimport androidx.compose.ui.res.colorResource\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.text.input.ImeAction\nimport androidx.compose.ui.text.input.KeyboardType\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.IntOffset\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport androidx.compose.ui.window.Dialog\nimport com.example.yvypora.R\nimport com.example.yvypora.models.Filter\nimport com.example.yvypora.models.ProductCardSale\nimport com.example.yvypora.ui.theme.YvyporaTheme\n\n\nclass ResultSearch : ComponentActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContent {\n            YvyporaTheme {\n                // A surface container using the 'background' color from the theme\n                Surface(\n                    modifier = Modifier.fillMaxSize(),\n                    color = MaterialTheme.colors.background\n                ) {\n                    ResultSearchMain()\n                }\n            }\n        }\n    }\n}\n\n@Composable\nfun ResultSearchMain() {\n    var nameProductSearch = \"Abobrinha\"\n    Column(\n        modifier = Modifier\n            .fillMaxWidth()\n            .fillMaxWidth()\n    ) {\n        CampResultSearch()\n        Spacer(modifier = Modifier.height(15.dp))\n        Text(\n            text = stringResource(id = R.string.title_result_search) + \" $nameProductSearch\",\n            modifier = Modifier.padding(start = 20.dp),\n            color = colorResource(id = R.color.green_options),\n            fontSize = 25.sp,\n            fontWeight = FontWeight.Bold\n        )\n        Spacer(modifier = Modifier.height(10.dp))\n        ListOfProductData(products = listProductsData())\n\n    }\n\n}\n\nval OptionFilter = listOf<Filter>(\n    Filter(\n        id = 1,\n        titulo = \"PrÃ³x. a mim\",\n        isEnabled = false\n    ),\n    Filter(\n        id = 2,\n        titulo = \"R$ 5,00\",\n        isEnabled = false\n    ),\n    Filter(\n        id = 3,\n        titulo = \"R$ 25,00\",\n        isEnabled = false\n    ),\n    Filter(\n        id = 4,\n        titulo = \"2 ou mais\",\n        isEnabled = false\n    ),\n    Filter(\n        id = 5,\n        titulo = \"2 ou mais\",\n        isEnabled = false\n    ),\n    Filter(\n        id = 6,\n        titulo = \"3 ou mais\",\n        isEnabled = false\n    ),\n    Filter(\n        id = 7,\n        titulo = \"4 ou mais\",\n        isEnabled = false\n    ),\n    Filter(\n        id = 8,\n        titulo = \"5 apenas\",\n        isEnabled = false\n    ),\n)\n\n@OptIn(ExperimentalMaterialApi::class)\n@Composable\nfun FilterSearch(\n    showDialog: Boolean,\n    onDismiss: () -> Unit,\n    onApplyFilter: (filter: String) -> Unit\n) {\n    var selectedFilter by remember { mutableStateOf(\"\") }\n    var inicialPrice = 0.0\n    var finalPrice = 50.0\n\n    if (showDialog) {\n        Dialog(\n            onDismissRequest = onDismiss\n        ) {\n            Surface(\n                modifier = Modifier\n                    .fillMaxWidth()\n                    .height(550.dp)\n            ) {\n                Column(\n                    modifier = Modifier\n                        .fillMaxWidth()\n                        .padding(start = 10.dp, top = 10.dp)\n                ) {\n                    Image(\n                        painter = painterResource(id = R.drawable.arrow),\n                        modifier = Modifier\n                            .height(35.dp)\n                            .width(40.dp)\n                            .clickable {\n                                onDismiss()\n                            },\n                        alignment = Alignment.BottomStart,\n                        contentDescription = stringResource(id = R.string.back_screen)\n                    )\n                    Spacer(modifier = Modifier.height(10.dp))\n                    Text(\n                        text = stringResource(id = R.string.filter),\n                        modifier = Modifier.fillMaxWidth(),\n                        fontWeight = FontWeight.Medium,\n                        fontSize = 25.sp,\n                        color = colorResource(id = R.color.green_width),\n                        textAlign = TextAlign.Center\n                    )\n                    Spacer(modifier = Modifier.height(15.dp))\n                    Text(\n                        text = stringResource(id = R.string.distance_filter),\n                        fontSize = 15.sp,\n                        fontWeight = FontWeight.Medium,\n                        color = colorResource(id = R.color.green_options),\n                        textAlign = TextAlign.Start\n                    )\n                    FilterButton(\n                        text = stringResource(id = R.string.next_to_me),\n                        isSelected = selectedFilter == \"Filter 1\",\n                        onClick = {\n                            selectedFilter = \"Filter 1\"\n                        }\n                    )\n                    Text(\n                        text = stringResource(id = R.string.price_filter),\n                        fontSize = 15.sp,\n                        fontWeight = FontWeight.Medium,\n                        color = colorResource(id = R.color.green_options),\n                        textAlign = TextAlign.Start\n                    )\n                    Row(\n                        horizontalArrangement = Arrangement.SpaceBetween,\n                        verticalAlignment = Alignment.CenterVertically) {\n                        Card(\n                            modifier = Modifier\n                                .padding(start = 10.dp)\n                                .width(87.dp)\n                                .height(35.dp)\n                            ,\n                            backgroundColor = Color.White,\n                            border = BorderStroke(1.dp, colorResource(id = R.color.green_width))\n                        ) {\n                            Text(\n                                text = \"R$ 5,00\",\n                                fontSize = 15.sp,\n                                modifier = Modifier\n                                    .fillMaxWidth()\n                                    .padding(top = 8.dp),\n                                color = colorResource(id = R.color.green_width),\n                                fontWeight = FontWeight.Bold,\n                                textAlign = TextAlign.Center\n                            )\n                        }\n                        Text(\n                            text = stringResource(id = R.string.to),\n                            fontSize = 15.sp,\n                            color = colorResource(id = R.color.green_width),\n                            fontWeight = FontWeight.Bold\n                        )\n                        Card(\n                            modifier = Modifier\n                                .padding(start = 10.dp)\n                                .width(87.dp)\n                                .height(35.dp)\n                            ,\n                            backgroundColor = Color.White,\n                            border = BorderStroke(1.dp, colorResource(id = R.color.green_width))\n                        ) {\n                            Text(\n                                text = \"R$ 25,00\",\n                                fontSize = 15.sp,\n                                modifier = Modifier\n                                    .fillMaxWidth()\n                                    .padding(top = 8.dp),\n                                color = colorResource(id = R.color.green_width),\n                                fontWeight = FontWeight.Bold,\n                                textAlign = TextAlign.Center\n                            )\n                        }\n                    }\n                    Text(\n                        text = stringResource(id = R.string.rating),\n                        fontSize = 15.sp,\n                        fontWeight = FontWeight.Medium,\n                        color = colorResource(id = R.color.green_options),\n                        textAlign = TextAlign.Start\n                    )\n                    Row(\n                        modifier = Modifier\n                            .fillMaxWidth()\n                            .padding(start = 10.dp, end = 20.dp, top = 10.dp)\n                        ,\n                        horizontalArrangement = Arrangement.SpaceBetween) {\n                        FilterButtonRating(\n                            text = stringResource(id = R.string.two_more),\n                            isSelected = selectedFilter == \"Filter 3\",\n                            onClick = {\n                                selectedFilter = \"Filter 3\"\n                            }\n                        )\n                        FilterButtonRating(\n                            text = stringResource(id = R.string.three_more),\n                            isSelected = selectedFilter == \"Filter 4\",\n                            onClick = {\n                                selectedFilter = \"Filter 4\"\n                            }\n                        )\n                    }\n                    Spacer(modifier = Modifier.height(10.dp))\n                    Row(\n                        modifier = Modifier\n                            .fillMaxWidth()\n                            .padding(start = 10.dp, end = 20.dp, top = 10.dp)\n                        ,\n                        horizontalArrangement = Arrangement.SpaceBetween)\n                    {\n                        FilterButtonRating(\n                            text = stringResource(id = R.string.four_more),\n                            isSelected = selectedFilter == \"Filter 5\",\n                            onClick = {\n                                selectedFilter = \"Filter 5\"\n                            }\n                        )\n                        FilterButtonRating(\n                            text = stringResource(id = R.string.five_only),\n                            isSelected = selectedFilter == \"Filter 6\",\n                            onClick = {\n                                selectedFilter = \"Filter 6\"\n                            }\n                        )\n                    }\n                    Spacer(modifier = Modifier.height(35.dp))\n                    Row(\n                        modifier = Modifier\n                            .fillMaxWidth(),\n                        horizontalArrangement = Arrangement.Center\n                    ) {\n                        Button(\n                            onClick =\n                            {\n                                onApplyFilter(selectedFilter)\n                                onDismiss\n                            },\n                            modifier = Modifier\n                                .width(128.dp)\n                                .height(39.dp),\n                            shape = RoundedCornerShape(7.dp),\n                            colors = ButtonDefaults.buttonColors(Color(115, 169, 66, 255))\n                        ) {\n                            Text(\n                                text = stringResource(id = R.string.apply_filter),\n                                fontSize = 12.sp,\n                                color = Color.White\n                            )\n                        }\n                    }\n\n                }\n            }\n\n        }\n    }\n}\n\n@Composable\nfun FilterButton(text: String, isSelected: Boolean, onClick: () -> Unit) {\n var colorText = colorResource(id = R.color.green_width)\n    if (isSelected)\n        colorText = Color.White\n    else\n        colorText\n\n        Button(\n            onClick = onClick,\n            modifier = Modifier.padding(start = 10.dp),\n            colors = ButtonDefaults.buttonColors(\n                backgroundColor = if (isSelected) colorResource(id = R.color.green_width) else Color.White,\n                contentColor = if (isSelected) colorResource(id = R.color.green_width) else Color.White,\n            ),\n            border = BorderStroke(1.dp, colorResource(id = R.color.green_width))\n        ) {\n            Text(text = text, color = colorText)\n        }\n}\n@Composable\nfun FilterButtonRating(text: String, isSelected: Boolean, onClick: () -> Unit) {\n\n    var colorText = colorResource(id = R.color.green_width)\n    if (isSelected)\n        colorText = Color.White\n    else\n        colorText\n    Button(\n        onClick = onClick,\n        modifier = Modifier\n            .height(46.dp)\n            .width(124.dp),\n        colors = ButtonDefaults.buttonColors(\n            backgroundColor = if (isSelected) colorResource(id = R.color.green_width) else Color.White,\n            contentColor = if (isSelected) colorResource(id = R.color.green_width) else Color.White,\n        ),\n        border = BorderStroke(1.dp, colorResource(id = R.color.green_width))\n    ) {\n        Row() {\n            Icon(\n                painter = painterResource(id = R.drawable.star),\n                contentDescription = \"\",\n                tint = colorResource(id = R.color.yellow_star)\n            )\n            Text(\n                text = text,\n                modifier = Modifier.fillMaxWidth(),\n                color = colorText\n            )\n        }\n\n    }\n}\n\n\nfun listProductsData() = listOf<ProductCardSale>(\n\n    ProductCardSale(\n        id = 1,\n        name = \"Manga\",\n        qntd_product = 3,\n        photo = 1,\n        type_weight = \"g\",\n        weight_product = 800,\n        price = 24.00,\n        promo = false\n    ),\n    ProductCardSale(\n        id = 1,\n        name = \"Manga\",\n        qntd_product = 3,\n        photo = 1,\n        type_weight = \"g\",\n        weight_product = 800,\n        price = 24.00,\n        promo = true,\n    ),\n    ProductCardSale(\n        id = 1,\n        name = \"Manga\",\n        qntd_product = 3,\n        photo = 1,\n        type_weight = \"g\",\n        weight_product = 800,\n        price = 24.00,\n        promo = true,\n    ),\n    ProductCardSale(\n        id = 1,\n        name = \"Manga\",\n        qntd_product = 3,\n        photo = 1,\n        type_weight = \"g\",\n        weight_product = 800,\n        price = 24.00,\n        promo = false,\n    )\n)\n\n@Composable\nfun CampResultSearch() {\n    var showDialog by remember { mutableStateOf(false) }\n    var searchState by remember {\n        mutableStateOf(\"\")\n    }\n    val context = LocalContext.current\n    Column(\n        modifier = Modifier\n            .padding(top = 10.dp, end = 10.dp)\n    ) {\n        Image(\n            painter = painterResource(id = R.drawable.arrow),\n            modifier = Modifier\n                .height(45.dp)\n                .width(50.dp)\n                .clickable {\n                    val intent = Intent(context, InicialScreen::class.java)\n                    context.startActivity(intent)\n                },\n            alignment = Alignment.BottomStart,\n            contentDescription = stringResource(id = R.string.back_screen)\n        )\n        Row(modifier = Modifier.padding(top = 10.dp)) {\n            OutlinedTextField(\n                modifier = Modifier\n                    .width(330.dp)\n                    .height(48.dp)\n                    .padding(start = 15.dp, end = 10.dp),\n                value = searchState,\n                onValueChange = { newText ->\n                    searchState = newText\n                },\n                keyboardOptions = KeyboardOptions(\n                    keyboardType = KeyboardType.Text,\n                    imeAction = ImeAction.Search\n                ),\n                colors = TextFieldDefaults.textFieldColors(\n                    textColor = Color.White,\n                    backgroundColor = colorResource(id = R.color.green_yvy),\n                    focusedIndicatorColor = colorResource(id = R.color.green_yvy),\n                    unfocusedIndicatorColor = colorResource(id = R.color.green_yvy),\n                    cursorColor = Color.White\n                ),\n                shape = RoundedCornerShape(20.dp),\n                trailingIcon = {\n                    Icon(\n                        painter = painterResource(R.drawable.lupa_icon),\n                        contentDescription = stringResource(id = R.string.lupa),\n                        modifier = Modifier\n                            .width(35.dp)\n                            .height(35.dp)\n                            .padding(end = 10.dp)\n                            .clickable {},\n                        tint = Color.White\n                    )\n                }\n            )\n            IconButton(\n                onClick = { showDialog = true },\n                modifier = Modifier\n                    .width(56.dp)\n                    .height(48.dp)\n                    .padding(end = 5.dp)\n                    .background(\n                        color = colorResource(id = R.color.green_width),\n                        shape = RoundedCornerShape(5.dp)\n                    ),\n            ) {\n                Icon(\n                    painter = painterResource(id = R.drawable.filter),\n                    contentDescription = \"\",\n                    tint = Color.White\n                )\n            }\n            FilterSearch(\n                showDialog = showDialog,\n                onDismiss = {\n                    showDialog = false\n                },\n                onApplyFilter = { filter ->\n                    showDialog = false\n                }\n            )\n        }\n    }\n}\n\n\n\n@Preview(showBackground = true)\n@Composable\nfun ResultSearchPreview() {\n    YvyporaTheme {\n        ResultSearchMain()\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/yvypora/ScreenClients/ResultSearch.kt b/app/src/main/java/com/example/yvypora/ScreenClients/ResultSearch.kt
--- a/app/src/main/java/com/example/yvypora/ScreenClients/ResultSearch.kt	(revision 737c9f276cbca6256e1d24ba2916a266c934c410)
+++ b/app/src/main/java/com/example/yvypora/ScreenClients/ResultSearch.kt	(date 1684149626009)
@@ -1,9 +1,11 @@
 package com.example.yvypora.ScreenClients
 
 
+import android.annotation.SuppressLint
 import android.content.Intent
 import android.graphics.drawable.shapes.Shape
 import android.os.Bundle
+import android.util.Log
 import androidx.activity.ComponentActivity
 import androidx.activity.compose.setContent
 import androidx.compose.animation.AnimatedVisibility
@@ -243,6 +245,7 @@
                                 textAlign = TextAlign.Center
                             )
                         }
+                        SliderPrice()
                     }
                     Text(
                         text = stringResource(id = R.string.rating),
@@ -327,10 +330,31 @@
         }
     }
 }
-
+ @OptIn(ExperimentalMaterialApi::class)
+ @Composable
+ fun SliderPrice(){
+     var sliderValues by remember{
+         mutableStateOf(5f..30f)
+     }
+     RangeSlider(
+         value = sliderValues, 
+         onValueChange = { sliderValues_ ->
+             sliderValues = sliderValues_
+         },
+         valueRange = 5f..30f,
+         onValueChangeFinished = {
+             Log.d(
+                 "MainActivity",
+                 "First: ${sliderValues.start}, Last: ${sliderValues.endInclusive}"
+             )
+         },
+         steps = 4
+     )
+     Text(text = "Start: ${sliderValues.start}, End: ${sliderValues.endInclusive}")
+ }
 @Composable
 fun FilterButton(text: String, isSelected: Boolean, onClick: () -> Unit) {
- var colorText = colorResource(id = R.color.green_width)
+ var colorText: Color = colorResource(id = R.color.green_width)
     if (isSelected)
         colorText = Color.White
     else
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\n    id 'com.android.application'\n    id 'org.jetbrains.kotlin.android'\n    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'\n}\n\nandroid {\n    namespace 'com.example.yvypora'\n    compileSdk 33\n\n    defaultConfig {\n        applicationId \"com.example.yvypora\"\n        minSdk 26\n        targetSdk 33\n        versionCode 1\n        versionName \"1.0\"\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n        vectorDrawables {\n            useSupportLibrary true\n        }\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n    kotlinOptions {\n        jvmTarget = '1.8'\n    }\n    buildFeatures {\n        compose true\n        viewBinding true\n    }\n    composeOptions {\n        kotlinCompilerExtensionVersion '1.2.0'\n    }\n    packagingOptions {\n        resources {\n            excludes += '/META-INF/{AL2.0,LGPL2.1}'\n        }\n    }\n}\n\ndependencies {\n\n    // Data Store\n    implementation \"androidx.datastore:datastore-preferences:1.0.0\"\n    implementation \"androidx.datastore:datastore-core:1.0.0\"\n\n    implementation \"androidx.compose.ui:ui-text-google-fonts:1.3.3\"\n    implementation 'androidx.core:core-ktx:1.7.0'\n    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'\n    implementation 'androidx.activity:activity-compose:1.3.1'\n    implementation \"androidx.compose.ui:ui-util:$compose_ui_version\"\n    implementation \"androidx.compose.ui:ui-tooling-preview:$compose_ui_version\"\n    implementation 'androidx.compose.material:material:1.2.0'\n    implementation 'androidx.appcompat:appcompat:1.4.1'\n    implementation 'com.google.android.material:material:1.5.0'\n    implementation 'androidx.annotation:annotation:1.3.0'\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'\n    implementation 'io.coil-kt:coil-compose:1.3.2'\n    implementation \"androidx.compose.ui:ui:$compose_ui_version\"\n    implementation 'androidx.core:core-ktx:+'\n    testImplementation 'junit:junit:4.13.2'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\n    androidTestImplementation \"androidx.compose.ui:ui-test-junit4:$compose_ui_version\"\n    debugImplementation \"androidx.compose.ui:ui-tooling:$compose_ui_version\"\n    debugImplementation \"androidx.compose.ui:ui-test-manifest:$compose_ui_version\"\n\n\n    implementation(\"androidx.navigation:navigation-compose:2.4.0-beta02\")\n//RetroFit Dependencies\n    implementation 'com.google.code.gson:gson:2.8.9'\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\n    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.1'\n\n//Coroutains\"\n    implementation \"org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2\"\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1' //viewModel scope\n    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1' //lifecycle scope\n    implementation 'androidx.fragment:fragment-ktx:1.4.1'\n\n//Lifecycle\n    implementation 'androidx.lifecycle:lifecycle-common:2.4.1'\n    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'\n//size dp/sp\n    implementation 'com.intuit.sdp:sdp-android:1.0.6'\n    implementation 'com.intuit.ssp:ssp-android:1.0.6'\n\n    implementation \"androidx.preference:preference-ktx:1.2.0\"\n\n    //FireBase\n    implementation platform('com.google.firebase:firebase-bom:31.2.3')\n    implementation 'com.google.firebase:firebase-analytics-ktx'\n    implementation 'com.google.firebase:firebase-auth:21.1.0'\n\n    //Paging Compose\n    implementation \"com.google.accompanist:accompanist-pager:0.17.0\"\n    implementation \"com.google.accompanist:accompanist-pager-indicators:0.17.0\"\n\n\n    implementation \"org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0\"\n\n    implementation \"androidx.compose.runtime:runtime-livedata:$compose_ui_version\"\n\n    implementation \"androidx.navigation:navigation-compose:2.5.2\"\n\n   // Dependencias do Google Maps\n    implementation 'com.google.maps.android:maps-compose:2.11.0'\n    implementation 'com.google.android.gms:play-services-maps:18.1.0'\n\n    //navigation\n    implementation(\"androidx.navigation:navigation-compose:2.4.0-alpha09\")\n\n\n    // Websocket\n    implementation ('io.socket:socket.io-client:2.0.0') {\n            exclude group: 'org.json', module: 'json'\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 737c9f276cbca6256e1d24ba2916a266c934c410)
+++ b/app/build.gradle	(date 1684151632761)
@@ -84,8 +84,8 @@
     implementation 'com.squareup.retrofit2:retrofit:2.9.0'
     implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
     implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.1'
-
-//Coroutains"
+//
+////Coroutains"
     implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"
     implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1' //viewModel scope
     implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1' //lifecycle scope
@@ -125,7 +125,7 @@
     implementation("androidx.navigation:navigation-compose:2.4.0-alpha09")
 
 
-    // Websocket
+//     Websocket
     implementation ('io.socket:socket.io-client:2.0.0') {
             exclude group: 'org.json', module: 'json'
     }
=======
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\n    id 'com.android.application'\n    id 'org.jetbrains.kotlin.android'\n    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'\n}\n\nandroid {\n    namespace 'com.example.yvypora'\n    compileSdk 33\n\n    defaultConfig {\n        applicationId \"com.example.yvypora\"\n        minSdk 26\n        targetSdk 33\n        versionCode 1\n        versionName \"1.0\"\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n        vectorDrawables {\n            useSupportLibrary true\n        }\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n    kotlinOptions {\n        jvmTarget = '1.8'\n    }\n    buildFeatures {\n        compose true\n        viewBinding true\n    }\n    composeOptions {\n        kotlinCompilerExtensionVersion '1.2.0'\n    }\n    packagingOptions {\n        resources {\n            excludes += '/META-INF/{AL2.0,LGPL2.1}'\n        }\n    }\n}\n\ndependencies {\n\n    // Data Store\n    implementation \"androidx.datastore:datastore-preferences:1.0.0\"\n    implementation \"androidx.datastore:datastore-core:1.0.0\"\n\n    implementation \"androidx.compose.ui:ui-text-google-fonts:1.3.3\"\n    implementation 'androidx.core:core-ktx:1.7.0'\n    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'\n    implementation 'androidx.activity:activity-compose:1.3.1'\n    implementation \"androidx.compose.ui:ui-util:$compose_ui_version\"\n    implementation \"androidx.compose.ui:ui-tooling-preview:$compose_ui_version\"\n    implementation 'androidx.compose.material:material:1.2.0'\n    implementation 'androidx.appcompat:appcompat:1.4.1'\n    implementation 'com.google.android.material:material:1.5.0'\n    implementation 'androidx.annotation:annotation:1.3.0'\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'\n    implementation 'io.coil-kt:coil-compose:1.3.2'\n    implementation \"androidx.compose.ui:ui:$compose_ui_version\"\n    implementation 'androidx.core:core-ktx:+'\n    testImplementation 'junit:junit:4.13.2'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\n    androidTestImplementation \"androidx.compose.ui:ui-test-junit4:$compose_ui_version\"\n    debugImplementation \"androidx.compose.ui:ui-tooling:$compose_ui_version\"\n    debugImplementation \"androidx.compose.ui:ui-test-manifest:$compose_ui_version\"\n\n\n    implementation(\"androidx.navigation:navigation-compose:2.4.0-beta02\")\n//RetroFit Dependencies\n    implementation 'com.google.code.gson:gson:2.8.9'\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\n    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.1'\n\n//Coroutains\"\n    implementation \"org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2\"\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1' //viewModel scope\n    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1' //lifecycle scope\n    implementation 'androidx.fragment:fragment-ktx:1.4.1'\n\n//Lifecycle\n    implementation 'androidx.lifecycle:lifecycle-common:2.4.1'\n    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'\n//size dp/sp\n    implementation 'com.intuit.sdp:sdp-android:1.0.6'\n    implementation 'com.intuit.ssp:ssp-android:1.0.6'\n\n    implementation \"androidx.preference:preference-ktx:1.2.0\"\n\n    //FireBase\n    implementation platform('com.google.firebase:firebase-bom:31.2.3')\n    implementation 'com.google.firebase:firebase-analytics-ktx'\n    implementation 'com.google.firebase:firebase-auth:21.1.0'\n\n    //Paging Compose\n    implementation \"com.google.accompanist:accompanist-pager:0.17.0\"\n    implementation \"com.google.accompanist:accompanist-pager-indicators:0.17.0\"\n\n\n    implementation \"org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0\"\n\n    implementation \"androidx.compose.runtime:runtime-livedata:$compose_ui_version\"\n\n    implementation \"androidx.navigation:navigation-compose:2.5.2\"\n\n   // Dependencias do Google Maps\n    implementation 'com.google.maps.android:maps-compose:2.11.0'\n    implementation 'com.google.android.gms:play-services-maps:18.1.0'\n\n    //navigation\n    implementation(\"androidx.navigation:navigation-compose:2.4.0-alpha09\")\n\n\n    // Websocket\n    implementation ('io.socket:socket.io-client:2.0.0') {\n            exclude group: 'org.json', module: 'json'\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 737c9f276cbca6256e1d24ba2916a266c934c410)
+++ b/app/build.gradle	(date 1684151621457)
@@ -14,6 +14,7 @@
         targetSdk 33
         versionCode 1
         versionName "1.0"
+        compileSdkPreview = "UpsideDownCake"
 
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
         vectorDrawables {
@@ -28,8 +29,8 @@
         }
     }
     compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_8
-        targetCompatibility JavaVersion.VERSION_1_8
+        sourceCompatibility "11"
+        targetCompatibility JavaVersion.VERSION_11
     }
     kotlinOptions {
         jvmTarget = '1.8'
@@ -117,7 +118,7 @@
 
     implementation "androidx.navigation:navigation-compose:2.5.2"
 
-   // Dependencias do Google Maps
+    // Dependencias do Google Maps
     implementation 'com.google.maps.android:maps-compose:2.11.0'
     implementation 'com.google.android.gms:play-services-maps:18.1.0'
 
@@ -127,6 +128,6 @@
 
     // Websocket
     implementation ('io.socket:socket.io-client:2.0.0') {
-            exclude group: 'org.json', module: 'json'
+        exclude group: 'org.json', module: 'json'
     }
 }
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\">\n\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    <uses-permission android:name=\"android.permisson.READ_EXTERNAL_STORAGE\" />\n\n    <application\n        android:allowBackup=\"true\"\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\n        android:fullBackupContent=\"@xml/backup_rules\"\n        android:icon=\"@drawable/logo\"\n        android:label=\"@string/app_name\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.Yvypora\"\n        android:usesCleartextTraffic=\"true\"\n        tools:targetApi=\"31\">\n        <activity\n            android:name=\".ScreenClients.ResultSearch\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_result_search\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.EditAddress\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_edit_address\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.CheckoutActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_checkout\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.ShoppingCartActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_shopping_cart\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.DescriptionProducts\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_description_products\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.AddAccount\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_add_account\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.AddCardAcitivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_add_pay_methods_acitivity\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.PaymentMethodsActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_payment_methods\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.AddAdressAcitivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_add_adress_acitivity\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.AdressesActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_adresses\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.BuyHistory\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_buy_history_acitivity\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.EditProfileSreen\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_edit_profile_sreen\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.FruitsResultActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/fruits_result\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.FairsActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/fair\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.ProfileClient\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_profile_client\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.ScreenSearch\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_screen_search\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".MarketerScreens.RegisterMarketer\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_register_marketer\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".MarketerScreens.ProductsMarketer\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_register_marketer\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".MarketerScreens.AddProducts\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_register_marketer\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.InicialScreen\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_inicial_screen\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".MarketerScreens.InicialMarketerActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_inicial_screen\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.RegisterClient\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_register_client\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".DecisionSreenActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_decision_sreen\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".LoginActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_login\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".MainActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_main\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.FruitsResultActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/fruits_result\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.VegetablesActivityActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/vegetable\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.SpicesActivityActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/spices\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".ScreenClients.OthersActivityActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/spices\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".SplashScreenActivity\"\n            android:exported=\"true\"\n            android:label=\"@string/app_name\"\n            android:theme=\"@style/Theme.Yvypora\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n\n        <meta-data\n            android:name=\"com.google.android.geo.API_KEY\"\n            android:value=\"${MAPS_API_KEY}\" />\n        <meta-data\n            android:name=\"com.google.android.gms.version\"\n            android:value=\"@integer/google_play_services_version\" />\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 737c9f276cbca6256e1d24ba2916a266c934c410)
+++ b/app/src/main/AndroidManifest.xml	(date 1684151231644)
@@ -141,11 +141,6 @@
             android:label="@string/title_activity_main"
             android:theme="@style/Theme.Yvypora" />
         <activity
-            android:name=".ScreenClients.FruitsResultActivity"
-            android:exported="false"
-            android:label="@string/fruits_result"
-            android:theme="@style/Theme.Yvypora" />
-        <activity
             android:name=".ScreenClients.VegetablesActivityActivity"
             android:exported="false"
             android:label="@string/vegetable"
>>>>>>> origin/master
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>buildscript {\n    ext {\n        compose_ui_version = '1.2.0'\n    }\n}// Top-level build file where you can add configuration options common to all sub-projects/modules.\nplugins {\n    id 'com.android.application' version '7.4.2' apply false\n    id 'com.android.library' version '7.4.2' apply false\n    id 'org.jetbrains.kotlin.android' version '1.8.21' apply false\n    id 'com.google.gms.google-services' version '4.3.15' apply false\n    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin' version '2.0.1' apply false\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 737c9f276cbca6256e1d24ba2916a266c934c410)
<<<<<<< HEAD
+++ b/build.gradle	(date 1684149625998)
=======
+++ b/build.gradle	(date 1684150684571)
>>>>>>> origin/master
@@ -6,7 +6,7 @@
 plugins {
     id 'com.android.application' version '7.4.2' apply false
     id 'com.android.library' version '7.4.2' apply false
-    id 'org.jetbrains.kotlin.android' version '1.8.21' apply false
+    id 'org.jetbrains.kotlin.android' version '1.7.0' apply false
     id 'com.google.gms.google-services' version '4.3.15' apply false
     id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin' version '2.0.1' apply false
 }
