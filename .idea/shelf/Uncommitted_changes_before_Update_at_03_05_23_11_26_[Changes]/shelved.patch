Index: app/src/main/java/com/example/yvypora/MarketerScreens/InicialMarketerActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.yvypora.MarketerScreens\n\nimport android.os.Bundle\nimport androidx.activity.ComponentActivity\nimport androidx.activity.compose.setContent\nimport androidx.compose.foundation.Image\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.clickable\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.material.Card\nimport androidx.compose.material.Surface\nimport androidx.compose.material.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.draw.shadow\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.res.colorResource\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport androidx.compose.ui.zIndex\nimport com.example.yvypora.R\nimport com.example.yvypora.ui.theme.YvyporaTheme\n\nclass InicialMarketerActivity : ComponentActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContent {\n            YvyporaTheme {\n                Surface() {\n                    InicialMarketerMain()\n                }\n\n            }\n        }\n    }\n}\n\n@Composable\nfun InicialMarketerMain() {\n    val context = LocalContext.current\n    val wave = painterResource(id = R.drawable.wave_marketer)\n    val user = painterResource(id = R.drawable.icon_user)\n    val total_sale = 10.56\n\n/*\n* TODO :\n*   - INTEGRAR OS DADOS DA VENDA NEM QUE SEJAM MOCKADOS\n*   - FAZER A NAVBAR DO FEIRANTE QUE Ã‰ DIFERENTE DO CONSUMIDOR\n*\n*   E DEPOIS DE TERMINAR ESSA TELA, TEM QUE FAZER TUDO SOBRE PRODUTO\n*\n* */\n\n    Column() {\n        Box(contentAlignment = Alignment.TopEnd) {\n            Image(\n                painter = wave, contentDescription = \"\",\n                Modifier\n                    .width(430.dp)\n                    .height(176.dp)\n                    .zIndex(1f)\n            )\n            Image(\n                painter = user, contentDescription = \"\",\n                Modifier\n                    .width(105.dp)\n                    .height(83.dp)\n                    .zIndex(2f)\n                    .padding(top = 20.dp, end = 30.dp)\n\n\n            )\n        }\n        Card(\n            Modifier\n                .fillMaxWidth()\n                .padding(20.dp)\n                .shadow(\n                    elevation = 50.dp,\n                    shape = RoundedCornerShape(15.dp),\n                    ambientColor = colorResource(id = R.color.green_yvy),\n                    spotColor = colorResource(id = R.color.green_yvy)\n                )\n        ) {\n            Column(\n                Modifier\n                    .fillMaxWidth()\n                    .height(250.dp),\n                horizontalAlignment = Alignment.CenterHorizontally,\n                verticalArrangement = Arrangement.Center\n            ) {\n                Text(\n                    text = stringResource(id = R.string.title_card_inicial_marketer),\n                    color = colorResource(\n                        id = R.color.green_options\n                    ),\n                    fontSize = 20.sp,\n                    fontWeight = FontWeight.Bold,\n                    textAlign = TextAlign.Center,\n                )\n                Text(\n                    text = stringResource(id = R.string.description_card_inicial_marketer),\n                    color = colorResource(\n                        id = R.color.gray_text\n                    ),\n                    fontSize = 12.sp,\n                    textAlign = TextAlign.Center,\n                )\n                Row(\n                    modifier = Modifier.fillMaxWidth(),\n                    verticalAlignment = Alignment.CenterVertically,\n                    horizontalArrangement = Arrangement.SpaceEvenly\n                ) {\n                    Image(\n                        painter = painterResource(id = R.drawable.add_products_icon),\n                        contentDescription = \"\",\n                        modifier = Modifier\n                            .width(80.dp)\n                            .height(100.dp)\n                            .clickable {}\n                    )\n                    Spacer(\n                        modifier = Modifier\n                            .width(1.7.dp)\n                            .height(80.dp)\n                            .background(\n                                color = colorResource(id = R.color.green_width)\n                            )\n                    )\n                    Image(\n                        painter = painterResource(id = R.drawable.fair_add_icon),\n                        contentDescription = \"\",\n                        modifier = Modifier\n                            .width(80.dp)\n                            .height(100.dp)\n                            .clickable {}\n                    )\n                }\n            }\n        }\n        Card(\n            Modifier\n                .fillMaxWidth()\n                .padding(20.dp)\n                .shadow(\n                    elevation = 50.dp,\n                    shape = RoundedCornerShape(15.dp),\n                    ambientColor = colorResource(id = R.color.green_yvy),\n                    spotColor = colorResource(id = R.color.green_yvy)\n                )\n        ) {\n            Column(Modifier.fillMaxWidth()) {\n                Text(\n                    text = stringResource(id = R.string.your_sales_today),\n                    color = colorResource(\n                        id = R.color.green_options\n                    ),\n                    fontSize = 20.sp,\n                    fontWeight = FontWeight.Bold,\n                    textAlign = TextAlign.Center,\n                )\n                Text(\n                    text = stringResource(id = R.string.total),\n                    color = colorResource(\n                        id = R.color.gray_text\n                    ),\n                    fontSize = 15.sp,\n                    fontWeight = FontWeight.Bold,\n                    textAlign = TextAlign.Start,\n                )\n                Text(\n                    text = \"R$$total_sale\",\n                    color = colorResource(\n                        id = R.color.darkgreen_yvy\n                    ),\n                    fontSize = 24.sp,\n                    fontWeight = FontWeight.Bold,\n                    textAlign = TextAlign.Start,\n                )\n            }\n\n\n        }\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/yvypora/MarketerScreens/InicialMarketerActivity.kt b/app/src/main/java/com/example/yvypora/MarketerScreens/InicialMarketerActivity.kt
--- a/app/src/main/java/com/example/yvypora/MarketerScreens/InicialMarketerActivity.kt	(revision 97ecd8c240e929cee640e41eda693090f23d5921)
+++ b/app/src/main/java/com/example/yvypora/MarketerScreens/InicialMarketerActivity.kt	(date 1683123438539)
@@ -1,6 +1,7 @@
 package com.example.yvypora.MarketerScreens
 
 import android.os.Bundle
+import android.widget.Space
 import androidx.activity.ComponentActivity
 import androidx.activity.compose.setContent
 import androidx.compose.foundation.Image
@@ -8,19 +9,24 @@
 import androidx.compose.foundation.clickable
 import androidx.compose.foundation.layout.*
 import androidx.compose.foundation.shape.RoundedCornerShape
+import androidx.compose.material.Button
 import androidx.compose.material.Card
 import androidx.compose.material.Surface
 import androidx.compose.material.Text
-import androidx.compose.runtime.Composable
+import androidx.compose.runtime.*
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.blur
 import androidx.compose.ui.draw.shadow
+import androidx.compose.ui.focus.onFocusChanged
 import androidx.compose.ui.platform.LocalContext
 import androidx.compose.ui.res.colorResource
 import androidx.compose.ui.res.painterResource
 import androidx.compose.ui.res.stringResource
+import androidx.compose.ui.text.font.FontStyle
 import androidx.compose.ui.text.font.FontWeight
 import androidx.compose.ui.text.style.TextAlign
+import androidx.compose.ui.text.style.TextDecoration
 import androidx.compose.ui.unit.dp
 import androidx.compose.ui.unit.sp
 import androidx.compose.ui.zIndex
@@ -44,6 +50,7 @@
 @Composable
 fun InicialMarketerMain() {
     val context = LocalContext.current
+    var statePrice by remember { mutableStateOf(false) }
     val wave = painterResource(id = R.drawable.wave_marketer)
     val user = painterResource(id = R.drawable.icon_user)
     val total_sale = 10.56
@@ -156,38 +163,105 @@
                 )
         ) {
             Column(Modifier.fillMaxWidth()) {
-                Text(
-                    text = stringResource(id = R.string.your_sales_today),
-                    color = colorResource(
-                        id = R.color.green_options
-                    ),
-                    fontSize = 20.sp,
-                    fontWeight = FontWeight.Bold,
-                    textAlign = TextAlign.Center,
-                )
+                Column(
+                    Modifier.fillMaxWidth(),
+                    horizontalAlignment = Alignment.CenterHorizontally
+                ) {
+                    Text(
+                        text = stringResource(id = R.string.your_sales_today),
+                        color = colorResource(
+                            id = R.color.green_options
+                        ),
+                        fontSize = 24.sp,
+                        fontWeight = FontWeight.Bold,
+                        textAlign = TextAlign.Center,
+                    )
+                }
                 Text(
                     text = stringResource(id = R.string.total),
                     color = colorResource(
                         id = R.color.gray_text
                     ),
-                    fontSize = 15.sp,
+                    fontSize = 20.sp,
                     fontWeight = FontWeight.Bold,
                     textAlign = TextAlign.Start,
                 )
-                Text(
-                    text = "R$$total_sale",
-                    color = colorResource(
-                        id = R.color.darkgreen_yvy
-                    ),
-                    fontSize = 24.sp,
-                    fontWeight = FontWeight.Bold,
-                    textAlign = TextAlign.Start,
-                )
+                Row(Modifier.fillMaxWidth()) {
+                    if (statePrice) {
+                        Text(
+                            text = "R$$total_sale",
+                            color = colorResource(
+                                id = R.color.darkgreen_yvy
+                            ),
+                            fontSize = 32.sp,
+                            fontWeight = FontWeight.Bold,
+                            textAlign = TextAlign.Start,
+
+                            )
+                        Spacer(Modifier.padding(15.dp))
+                        Image(
+                            painter = painterResource(id = R.drawable.olho_off),
+                            contentDescription = "",
+                            Modifier
+                                .clickable { statePrice = false }
+                                .height(50.dp)
+                                .width(50.dp)
+                        )
+                    } else {
+                        Text(
+                            text = "R$****",
+                            color = colorResource(
+                                id = R.color.darkgreen_yvy
+                            ),
+                            fontSize = 32.sp,
+                            fontWeight = FontWeight.Bold,
+                            textAlign = TextAlign.Start,
+
+                            )
+                        Spacer(Modifier.padding(15.dp))
+                        Image(
+                            painter = painterResource(id = R.drawable.olho_on),
+                            contentDescription = "",
+                            Modifier
+                                .clickable { statePrice = true }
+                                .height(50.dp)
+                                .width(50.dp)
+                        )
+                    }
+                }
+               Row(Modifier.fillMaxWidth()) {
+                   Text(text = "venda as 12:99", color = colorResource(id = R.color.gray_text))
+                   Text(text = "+ 5,00", color = colorResource(id = R.color.green_yvy))
+               }
+                Row(Modifier.fillMaxWidth()) {
+                    Text(text = "venda as 12:99", color = colorResource(id = R.color.gray_text))
+                    Text(text = "+ 5,00", color = colorResource(id = R.color.green_yvy))
+                }
+                Row(Modifier.fillMaxWidth()) {
+                    Text(text = "venda as 12:99", color = colorResource(id = R.color.gray_text))
+                    Text(text = "+ 5,00", color = colorResource(id = R.color.green_yvy))
+                }
+                Spacer(modifier = Modifier.padding(5.dp))
+                Column(
+                    Modifier.fillMaxWidth(),
+                    horizontalAlignment = Alignment.CenterHorizontally
+                ) {
+                    Text(
+                        text = stringResource(id = R.string.history_complete),
+                        color = colorResource(
+                            id = R.color.darkgreen_yvy
+                        ),
+                        fontSize = 22.sp,
+                        fontWeight = FontWeight.Bold,
+                        textDecoration = TextDecoration.Underline,
+                    )
+                }
             }
-
-
         }
     }
+}
 
 
-}
+
+
+
Index: app/src/main/java/com/example/yvypora/ScreenClients/EditAddress.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.yvypora.ScreenClients\n\nimport android.content.Intent\nimport android.os.Bundle\nimport androidx.activity.ComponentActivity\nimport androidx.activity.compose.setContent\nimport androidx.compose.foundation.Image\nimport androidx.compose.foundation.clickable\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.foundation.rememberScrollState\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.foundation.text.KeyboardOptions\nimport androidx.compose.foundation.verticalScroll\nimport androidx.compose.material.*\nimport androidx.compose.runtime.*\nimport androidx.compose.runtime.saveable.rememberSaveable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.focus.FocusRequester\nimport androidx.compose.ui.focus.focusRequester\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.res.colorResource\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.text.input.KeyboardCapitalization\nimport androidx.compose.ui.text.input.KeyboardType\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport com.example.yvypora.R\nimport com.example.yvypora.ScreenClients.ui.theme.YvyporaTheme\nimport com.example.yvypora.models.AddressCard\n\nclass EditAddress : ComponentActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        val listAddress: List<AddressCard> = intent.getParcelableArrayListExtra<AddressCard>(\"formData\") ?: emptyList()\n        setContent {\n            YvyporaTheme {\n                // A surface container using the 'background' color from the theme\n                Surface(\n                    modifier = Modifier.fillMaxSize(),\n                    color = MaterialTheme.colors.background\n                ) {\n\n                }\n            }\n        }\n    }\n}\n\n\n\n\n//var numero = address.numero\n\n@Composable\nfun MainEditAdress() {\n    val context = LocalContext.current\n    Column(modifier = Modifier\n        .fillMaxWidth()\n        .fillMaxSize())\n    {\n        Row(\n            modifier = Modifier\n                .fillMaxWidth()\n                .padding(top = 30.dp, start = 15.dp, bottom = 15.dp),\n            horizontalArrangement = Arrangement.Center,\n            verticalAlignment = Alignment.CenterVertically\n\n        ) {\n            Image(\n                painter = painterResource(id = R.drawable.arrow),\n                modifier = Modifier\n                    .height(45.dp)\n                    .width(55.dp)\n                    .clickable {\n                        val intent = Intent(context, AdressesActivity::class.java)\n                        context.startActivity(intent)\n                    },\n                alignment = Alignment.BottomStart,\n                contentDescription = stringResource(id = R.string.back_screen)\n            )\n            Text(\n                text = stringResource(id = R.string.choose_location),\n                modifier = Modifier\n                    .fillMaxWidth(),\n                fontSize = 24.sp,\n                textAlign = TextAlign.Center,\n                color = colorResource(id = R.color.darkgreen_yvy)\n            )\n        }\n        Box(){\n            Image(\n                painter = painterResource(id = R.drawable.googlemaps),\n                modifier = Modifier\n                    .height(341.dp)\n                    .padding(top = 15.dp)\n                    .fillMaxWidth(),\n                alignment = Alignment.BottomStart,\n                contentDescription = stringResource(id = R.string.back_screen)\n            )\n            EditAddresses()\n        }\n        Spacer(modifier = Modifier.height(25.dp))\n        Button(\n            onClick = {\n                val intent = Intent(context, AddAdressAcitivity()::class.java)\n                context.startActivity(intent)\n            },\n            colors = ButtonDefaults.buttonColors(Color(83, 141, 34)),\n            modifier = Modifier\n                .width(200.dp)\n                .height(48.dp)\n                .align(Alignment.CenterHorizontally),\n            shape = RoundedCornerShape(5.dp),\n\n            ) {\n            Text(\n                text = stringResource(id = R.string.to_save),\n                color = Color.White,\n                fontSize = 20.sp\n            )\n        }\n    }\n\n}\n\n@Composable\nfun EditAddresses(){\n    Column(modifier = Modifier.padding(top = 15.dp)) {\n\n        Card(modifier = Modifier\n            .fillMaxWidth()\n            .padding(top = 193.dp, start = 12.dp, end = 12.dp)\n            .height(360.dp),\n            backgroundColor = colorResource(id = R.color.green_camps),\n            shape = RoundedCornerShape(\n                topStart = 10.dp,\n                topEnd = 0.dp,\n                bottomEnd = 10.dp,\n                bottomStart = 0.dp\n            )\n        ) {\n            Column(modifier = Modifier\n                .padding(start = 15.dp, top = 12.dp)\n                .verticalScroll(rememberScrollState())\n            ) {\n                Text(\n                    text = stringResource(id = R.string.details_address),\n                    modifier = Modifier\n                        .padding(start = 6.dp),\n                    fontSize = 23.sp,\n                    color = colorResource(id = R.color.darkgreen_yvy)\n                )\n                NameEditAdress()\n                NameRecipterEditAdress()\n                PhoneEditAdress()\n                CepEditAdress()\n                NumEditAddress()\n                Spacer(modifier = Modifier.height(15.dp))\n\n            }\n        }\n    }\n}\n\n@Composable\nfun NameEditAdress() {\n    var nameState by rememberSaveable {\n        mutableStateOf(\"\")\n    }\n\n    val inputsFocusRequest = FocusRequester()\n\n    Text(\n        text = stringResource(id = R.string.name_address),\n        modifier = Modifier.padding(top = 15.dp),\n        fontSize = 16.sp,\n        textAlign = TextAlign.Start,\n        color = colorResource(id = R.color.darkgreen_yvy)\n    )\n    TextField(\n        value = nameState,\n        onValueChange = { newName ->\n            var lastChar = newName.get(newName.length - 1)\n\n            var newValue =\n                if (lastChar == '.' || lastChar == ',')\n                    newName.dropLast(1)\n                else newName\n            nameState = newValue\n        },\n        placeholder = {\n            Text(\n                text = \"nome\",\n                fontSize = 16.sp\n            )\n        },\n        colors = TextFieldDefaults.textFieldColors(\n            backgroundColor = Color.Unspecified,\n            focusedIndicatorColor = colorResource(id = R.color.darkgreen_yvy),\n            unfocusedIndicatorColor = colorResource(id = R.color.darkgreen_yvy),\n            cursorColor = colorResource(id = R.color.darkgreen_yvy)\n        ),\n        modifier = Modifier\n            .width(283.dp)\n            .height(53.dp)\n            .focusRequester(inputsFocusRequest),\n        keyboardOptions = KeyboardOptions(\n            keyboardType = KeyboardType.Text,\n            capitalization = KeyboardCapitalization.Sentences\n        ),\n        singleLine = true,\n\n        )\n\n}\n\n@Composable\nfun NameRecipterEditAdress() {\n    var nameState by rememberSaveable {\n        mutableStateOf(\"\")\n    }\n\n    val inputsFocusRequest = FocusRequester()\n\n    Text(\n        text = stringResource(id = R.string.name_of_recipient),\n        modifier = Modifier.padding(top = 15.dp),\n        fontSize = 16.sp,\n        textAlign = TextAlign.Start,\n        color = colorResource(id = R.color.darkgreen_yvy)\n    )\n    TextField(\n        value = nameState,\n        onValueChange = { newName ->\n            var lastChar = newName.get(newName.length - 1)\n\n            var newValue =\n                if (lastChar == '.' || lastChar == ',')\n                    newName.dropLast(1)\n                else newName\n            nameState = newValue\n        },\n        colors = TextFieldDefaults.textFieldColors(\n            backgroundColor = Color.Unspecified,\n            focusedIndicatorColor = colorResource(id = R.color.darkgreen_yvy),\n            unfocusedIndicatorColor = colorResource(id = R.color.darkgreen_yvy),\n            cursorColor = colorResource(id = R.color.darkgreen_yvy)\n        ),\n        modifier = Modifier\n            .width(283.dp)\n            .height(53.dp)\n            .focusRequester(inputsFocusRequest),\n        keyboardOptions = KeyboardOptions(\n            keyboardType = KeyboardType.Text,\n            capitalization = KeyboardCapitalization.Sentences\n        ),\n        singleLine = true,\n\n        )\n\n}\n\n@Composable\nfun PhoneEditAdress() {\n    var phoneState by rememberSaveable {\n        mutableStateOf(\"\")\n    }\n    var isPhoneErrorEmpty by remember {\n        mutableStateOf(false)\n    }\n    val inputsFocusRequest = FocusRequester()\n\n\n    Text(\n        text = stringResource(id = R.string.phone_address),\n        modifier = Modifier.padding(top = 15.dp),\n        fontSize = 16.sp,\n        textAlign = TextAlign.Start,\n        color = colorResource(id = R.color.darkgreen_yvy)\n    )\n    TextField(\n        value = phoneState,\n        onValueChange = { newPhone ->\n            isPhoneErrorEmpty = newPhone.isEmpty()\n\n            if (phoneState.length > 10) newPhone.dropLast(1)\n\n            phoneState = newPhone\n        },\n        colors = TextFieldDefaults.textFieldColors(\n            backgroundColor = Color.Unspecified,\n            focusedIndicatorColor = colorResource(id = R.color.darkgreen_yvy),\n            unfocusedIndicatorColor = colorResource(id = R.color.darkgreen_yvy),\n            cursorColor = colorResource(id = R.color.darkgreen_yvy)\n        ),\n        modifier = Modifier\n            .width(283.dp)\n            .height(53.dp)\n            .focusRequester(inputsFocusRequest),\n        keyboardOptions = KeyboardOptions(\n            keyboardType = KeyboardType.Number,\n            capitalization = KeyboardCapitalization.Sentences\n        ),\n        singleLine = true,\n    )\n    if (isPhoneErrorEmpty) {\n        Text(\n            text = stringResource(id = R.string.phone_error_empty),\n            modifier = Modifier.fillMaxWidth(),\n            color = Color.Red,\n            textAlign = TextAlign.End\n        )\n    }\n}\n\n@Composable\nfun CepEditAdress() {\n    var phoneState by rememberSaveable {\n        mutableStateOf(\"\")\n    }\n    var isPhoneErrorEmpty by remember {\n        mutableStateOf(false)\n    }\n    val inputsFocusRequest = FocusRequester()\n\n\n    Text(\n        text = stringResource(id = R.string.cep_address),\n        modifier = Modifier.padding(top = 15.dp),\n        fontSize = 16.sp,\n        textAlign = TextAlign.Start,\n        color = colorResource(id = R.color.darkgreen_yvy)\n    )\n    TextField(\n        value = phoneState,\n        onValueChange = { newPhone ->\n            isPhoneErrorEmpty = newPhone.isEmpty()\n\n            if (phoneState.length > 10) newPhone.dropLast(1)\n\n            phoneState = newPhone\n        },\n        colors = TextFieldDefaults.textFieldColors(\n            backgroundColor = Color.Unspecified,\n            focusedIndicatorColor = colorResource(id = R.color.darkgreen_yvy),\n            unfocusedIndicatorColor = colorResource(id = R.color.darkgreen_yvy),\n            cursorColor = colorResource(id = R.color.darkgreen_yvy)\n        ),\n        modifier = Modifier\n            .width(283.dp)\n            .height(53.dp)\n            .focusRequester(inputsFocusRequest),\n        keyboardOptions = KeyboardOptions(\n            keyboardType = KeyboardType.Number,\n            capitalization = KeyboardCapitalization.Sentences\n        ),\n        singleLine = true,\n    )\n    if (isPhoneErrorEmpty) {\n        Text(\n            text = stringResource(id = R.string.cep_error_empty),\n            modifier = Modifier.fillMaxWidth(),\n            color = Color.Red,\n            textAlign = TextAlign.End\n        )\n    }\n}\n\n@Composable\nfun NumEditAddress(){\n\n}\n\n\n@Preview(showBackground = true)\n@Composable\nfun EditAddressPreview() {\n    YvyporaTheme {\n            MainEditAdress()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/yvypora/ScreenClients/EditAddress.kt b/app/src/main/java/com/example/yvypora/ScreenClients/EditAddress.kt
--- a/app/src/main/java/com/example/yvypora/ScreenClients/EditAddress.kt	(revision 97ecd8c240e929cee640e41eda693090f23d5921)
+++ b/app/src/main/java/com/example/yvypora/ScreenClients/EditAddress.kt	(date 1683112247961)
@@ -30,8 +30,8 @@
 import androidx.compose.ui.unit.dp
 import androidx.compose.ui.unit.sp
 import com.example.yvypora.R
-import com.example.yvypora.ScreenClients.ui.theme.YvyporaTheme
 import com.example.yvypora.models.AddressCard
+import com.example.yvypora.ui.theme.YvyporaTheme
 
 class EditAddress : ComponentActivity() {
     override fun onCreate(savedInstanceState: Bundle?) {
@@ -377,10 +377,10 @@
 }
 
 
-@Preview(showBackground = true)
-@Composable
-fun EditAddressPreview() {
-    YvyporaTheme {
-            MainEditAdress()
-    }
-}
\ No newline at end of file
+//@Preview(showBackground = true)
+//@Composable
+//fun EditAddressPreview() {
+//    YvyporaTheme {
+//            MainEditAdress()
+//    }
+//}
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\">\n\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    <uses-permission android:name=\"android.permisson.READ_EXTERNAL_STORAGE\" />\n\n    <application\n        android:allowBackup=\"true\"\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\n        android:fullBackupContent=\"@xml/backup_rules\"\n        android:icon=\"@drawable/logo\"\n        android:label=\"@string/app_name\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.Yvypora\"\n        tools:targetApi=\"31\">\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.CheckoutActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_checkout\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.ShoppingCartActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_shopping_cart\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.DescriptionProducts\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_description_products\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.AddAccount\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_add_account\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.AddCardAcitivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_add_pay_methods_acitivity\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.PaymentMethodsActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_payment_methods\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.AddAdressAcitivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_add_adress_acitivity\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.AdressesActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_adresses\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.BuyHistory\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_buy_history_acitivity\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.EditProfileSreen\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_edit_profile_sreen\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".FairsActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/fair\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.ProfileClient\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_profile_client\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.ScreenSearch\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_screen_search\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".RegisterMarketer\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_register_marketer\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.InicialScreen\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_inicial_screen\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.RegisterClient\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_register_client\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".DecisionSreenActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_decision_sreen\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".LoginActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_login\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".MainActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/title_activity_main\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.FruitsResultActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/fruits_result\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.VegetablesActivityActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/vegetable\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.SpicesActivityActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/spices\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\"com.example.yvypora.ScreenClients.OthersActivityActivity\"\n            android:exported=\"false\"\n            android:label=\"@string/spices\"\n            android:theme=\"@style/Theme.Yvypora\" />\n        <activity\n            android:name=\".SplashScreenActivity\"\n            android:exported=\"true\"\n            android:label=\"@string/app_name\"\n            android:theme=\"@style/Theme.Yvypora\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n\n        <meta-data\n            android:name=\"com.google.android.geo.API_KEY\"\n            android:value=\"${MAPS_API_KEY}\" />\n        <meta-data\n            android:name=\"com.google.android.gms.version\"\n            android:value=\"@integer/google_play_services_version\" />\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 97ecd8c240e929cee640e41eda693090f23d5921)
+++ b/app/src/main/AndroidManifest.xml	(date 1683112470723)
@@ -65,7 +65,7 @@
             android:label="@string/title_activity_edit_profile_sreen"
             android:theme="@style/Theme.Yvypora" />
         <activity
-            android:name=".FairsActivity"
+            android:name=".ScreenClients.FairsActivity"
             android:exported="false"
             android:label="@string/fair"
             android:theme="@style/Theme.Yvypora" />
@@ -80,12 +80,17 @@
             android:label="@string/title_activity_screen_search"
             android:theme="@style/Theme.Yvypora" />
         <activity
-            android:name=".RegisterMarketer"
+            android:name=".MarketerScreens.RegisterMarketer"
             android:exported="false"
             android:label="@string/title_activity_register_marketer"
             android:theme="@style/Theme.Yvypora" />
         <activity
             android:name="com.example.yvypora.ScreenClients.InicialScreen"
+            android:exported="false"
+            android:label="@string/title_activity_inicial_screen"
+            android:theme="@style/Theme.Yvypora" />
+        <activity
+            android:name="com.example.yvypora.MarketerScreens.InicialMarketerActivity"
             android:exported="false"
             android:label="@string/title_activity_inicial_screen"
             android:theme="@style/Theme.Yvypora" />
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    <string name=\"app_name\">Yvypora</string>\n    <string name=\"title_activity_main\">MainActivity</string>\n    <string name=\"title_activity_main2\">MainActivity2</string>\n    <string name=\"slogan\">\"Find your fair wherever you are\"</string>\n    <string name=\"yvypora\">\"yvyporÃ£\"</string>\n    <string name=\"login\">\"Login\"</string>\n    <string name=\"enter\">\"Enter\"</string>\n    <string name=\"question\">\"Don't have an account?\"</string>\n    <string name=\"register\">\"Register\"</string>\n    <string name=\"title_activity_login\">LoginActivity</string>\n    <string name=\"prompt_email\">Email</string>\n    <string name=\"prompt_password\">Password</string>\n    <string name=\"action_sign_in\">Sign in or register</string>\n    <string name=\"action_sign_in_short\">Sign in</string>\n    <string name=\"welcome\">\"Welcome !\"</string>\n    <string name=\"invalid_username\">Not a valid username</string>\n    <string name=\"invalid_password\">Password must be >5 characters</string>\n    <string name=\"login_failed\">\"Login failed\"</string>\n    <string name=\"name\">\"Name:\"</string>\n    <string name=\"email\">\"Email:\"</string>\n    <string name=\"name_error\">\"Provide a username!\"</string>\n    <string name=\"email_error\">\"Provide a valid email!\"</string>\n    <string name=\"icon_content_description\">\"Vegetable box\"</string>\n    <string name=\"title1_activity_decision_sreen\">Welcome to</string>\n    <string name=\"title_activity_decision_sreen\">Welcome to</string>\n    <string name=\"title2_activity_decision_sreen\">your digital fair</string>\n    <string name=\"question_decision_sreen\">How will you use the app?</string>\n    <string name=\"decision_option1\">CLIENT</string>\n    <string name=\"decision_option2\">MARKETER</string>\n    <string name=\"title_activity_register_client\" translatable=\"false\">RegisterClient</string>\n    <string name=\"password\">Password:</string>\n    <string name=\"message_error_pass1\">Provide a password!</string>\n    <string name=\"message_error_pass2\">Cannot be more than 8 characters!</string>\n    <string name=\"profile_picture\">Add a profile picture</string>\n    <string name=\"title_cpf\">CPF:</string>\n    <string name=\"cpf_error_empty\">Provide a CPF!</string>\n    <string name=\"cpf_error_invalid\">Invalid CPF!</string>\n    <string name=\"title_cep\">CEP:</string>\n    <string name=\"cep_error_empty\">Provide a CEP!</string>\n    <string name=\"cep_error_invalid\">Invalid CEP!</string>\n    <string name=\"button_register\">Register</string>\n    <string name=\"title_activity_register_marketer\">RegisterMarketer</string>\n    <string name=\"name_tent\">Tent name</string>\n    <string name=\"phone_tent\">Tent phone</string>\n    <string name=\"date_of_birth\">Date of birth</string>\n    <string name=\"phone_error_empty\">Provide a phone!</string>\n    <string name=\"title_phone\">Phone</string>\n    <string name=\"title_activity_inicial_screen\">InicialScreen</string>\n    <string name=\"title_activity_inicial_screen_marketer\">InicialScreenMarketer</string>\n    <string name=\"title_cnpj\">CNPJ:</string>\n    <string name=\"cnpj_error_empty\">Provide a CNPJ!</string>\n    <string name=\"cnpj_error_invalid\">Invalid CNPJ!</string>\n    <string name=\"gender_f\">Feminine</string>\n    <string name=\"gender_m\">Masculine</string>\n    <string name=\"lupa\">Magnifying glass</string>\n    <string name=\"fruits\">Fruits</string>\n    <string name=\"vegetable\">Veggies</string>\n    <string name=\"spices\">Spices</string>\n    <string name=\"other\">Others</string>\n    <string name=\"isBirthErrorEmpty\">Provide a Birth!</string>\n    <string name=\"titleBirth\">Date of Birth</string>\n    <string name=\"all\">All</string>\n    <string name=\"discount\">At discount</string>\n    <string name=\"near\">Near to you</string>\n    <string name=\"home\">Icon home</string>\n    <string name=\"profile\">Icon profile</string>\n    <string name=\"fair\">Icon fair</string>\n    <string name=\"live\">Icon live</string>\n    <string name=\"title_activity_screen_search\">ScreenSearch</string>\n    <string name=\"back_screen\">Shortcut to switch screen</string>\n    <string name=\"latest_search\">Latest Searches</string>\n    <string name=\"delete_search\">Delete a survey</string>\n    <string name=\"title_activity_profile_client\">ProfileClient</string>\n    <string name=\"photo_profile\">Profile picture</string>\n    <string name=\"edit_account\">Edit account</string>\n    <string name=\"address\">Address</string>\n    <string name=\"payment_methods\">Payment methods</string>\n    <string name=\"purchase_history\">Purchase history</string>\n    <string name=\"logout\">Logout</string>\n    <string name=\"title_activity_edit_profile_sreen\">EditProfileSreen</string>\n    <string name=\"to_save\">To save</string>\n    <string name=\"title_activity_address\">AddressActivity</string>\n    <string name=\"title_activity_adresses\">AdressesActivity</string>\n    <string name=\"adresses\">Adresses</string>\n    <string name=\"main_adresses\">Main address</string>\n    <string name=\"add_new_adress\">Add new addresses by clicking below:</string>\n    <string name=\"to_add\">To add</string>\n    <string name=\"title_activity_add_adress_acitivity\">AddAdressAcitivity</string>\n    <string name=\"title_activity_buy_history_acitivity\">BuyHistory</string>\n    <string name=\"choose_location\">Choose the location</string>\n    <string name=\"details_address\">Address details</string>\n    <string name=\"name_address\">Address name</string>\n    <string name=\"name_of_recipient\">Name of the recipient</string>\n    <string name=\"phone_address\">Contact phone</string>\n    <string name=\"cep_address\">CEP</string>\n    <string name=\"title_activity_payment_methods\">PaymentMethodsActivity</string>\n    <string name=\"title_payment_methods\">Payment methods</string>\n    <string name=\"credit_card\">Credit card</string>\n    <string name=\"title_activity_add_pay_methods_acitivity\">AddPayMethodsAcitivity</string>\n    <string name=\"add_card_pay_methods\">Add your card</string>\n    <string name=\"name_card_pay_methods\">Name on card</string>\n    <string name=\"number_card_pay_methods\">Card number</string>\n    <string name=\"validity_card_pay_methods\">Expiration date</string>\n    <string name=\"add_card\">Add. card</string>\n    <string name=\"add_account\">Add. account</string>\n    <string name=\"title_activity_add_account\">AddAccount</string>\n    <string name=\"add_account_pay_methods\">Add your account</string>\n    <string name=\"fruits_result\">Fruits</string>\n    <string name=\"logout2\">Logout</string>\n    <string name=\"logout_text\">Are you sure youo want to quit</string>\n    <string name=\"title_activity_description_products\">DescriptionProducts</string>\n    <string name=\"description\">Description</string>\n    <string name=\"buy_now\">Buy now</string>\n    <string name=\"add_affection\">Add. to affection</string>\n    <string name=\"title_activity_shopping_cart\">ShoppingCartActivity</string>\n    <string name=\"my_shopping_cart\">My shopping cart</string>\n    <string name=\"date\">Date:</string>\n    <string name=\"promotion\">Promotion!</string>\n    <string name=\"pay\">Pay</string>\n    <string name=\"title_activity_checkout\">CheckoutActivity</string>\n    <string name=\"checkout\">Checkout</string>\n    <string name=\"change\">Change</string>\n    <string name=\"edit\">Edit</string>\n    <string name=\"delete_address\">Delete address</string>\n    <string name=\"title_card_inicial_marketer\">START EARNING WITH YVYPORÃƒ TODAY!</string>\n    <string name=\"description_card_inicial_marketer\">Start add your products ou register the fairs you are part of</string>\n    <string name=\"your_sales_today\">Your sales today</string>\n    <string name=\"history_complete\">Your complete sales history</string>\n    <string name=\"total\">Total :</string>\n\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision 97ecd8c240e929cee640e41eda693090f23d5921)
+++ b/app/src/main/res/values/strings.xml	(date 1683112122991)
@@ -128,6 +128,9 @@
     <string name="your_sales_today">Your sales today</string>
     <string name="history_complete">Your complete sales history</string>
     <string name="total">Total :</string>
+    <string name="payment_method">Payment Method</string>
+    <string name="order">Order</string>
+    <string name="delivery_fee">Delivery Fee</string>
 
 
 </resources>
\ No newline at end of file
Index: app/src/main/res/values-pt-rBR/stringsBR.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <string name=\"app_name\">Yvypora</string>\n    <string name=\"title_activity_main\">MainActivity</string>\n    <string name=\"title_activity_main2\">MainActivity2</string>\n    <string name=\"slogan\">\"Encontre sua feira de onde estiver\"</string>\n    <string name=\"yvypora\">\"yvyporÃ£\"</string>\n    <string name=\"login\">\"Login\"</string>\n    <string name=\"enter\">\"Entrar\"</string>\n    <string name=\"question\">\"NÃ£o possui uma conta?\"</string>\n    <string name=\"register\">\"Cadastre-se\"</string>\n    <string name=\"name\">\"Nome:\"</string>\n    <string name=\"email\">\"Email:\"</string>\n    <string name=\"name_error\">\"Informe um nome de usuÃ¡rio!\"</string>\n    <string name=\"email_error\">\"Informe um email vÃ¡lido!\"</string>\n    <string name=\"icon_content_description\">\"Caixa de vegetais\"</string>\n    <string name=\"title1_activity_decision_sreen\">Bem-vindo(a) ao</string>\n    <string name=\"title_activity_decision_sreen\">Welcome to</string>\n    <string name=\"title2_activity_decision_sreen\">a sua feira digital</string>\n    <string name=\"question_decision_sreen\">Como vocÃª usuarÃ¡ o aplicativo?</string>\n    <string name=\"decision_option1\">CLIENTE</string>\n    <string name=\"title_activity_login\">LoginActivity</string>\n    <string name=\"prompt_email\">Email</string>\n    <string name=\"prompt_password\">Password</string>\n    <string name=\"action_sign_in\">Sign in or register</string>\n    <string name=\"action_sign_in_short\">Sign in</string>\n    <string name=\"welcome\">\"Welcome !\"</string>\n    <string name=\"invalid_username\">Not a valid username</string>\n    <string name=\"invalid_password\">Password must be >5 characters</string>\n    <string name=\"login_failed\">\"Login failed\"</string>\n    <string name=\"decision_option2\">FEIRANTE</string>\n    <string name=\"password\">Senha:</string>\n    <string name=\"message_error_pass1\">Informe uma senha!</string>\n    <string name=\"message_error_pass2\">NÃ£o pode ter mais de 8 caracteres!</string>\n    <string name=\"profile_picture\">Adicione uma foto de perfil</string>\n    <string name=\"title_cpf\">CPF</string>\n    <string name=\"cpf_error_empty\">Informe um CPF!</string>\n    <string name=\"cpf_error_invalid\">CPF invÃ¡lido !</string>\n    <string name=\"title_cep\">CEP</string>\n    <string name=\"cep_error_empty\">Informe um CEP!</string>\n    <string name=\"cep_error_invalid\">CEP invÃ¡lido!</string>\n    <string name=\"button_register\">Cadastrar</string>\n    <string name=\"title_activity_register_marketer\">RegisterMarketer</string>\n    <string name=\"name_tent\">Nome da barraca</string>\n    <string name=\"phone_tent\">Telefone da barraca</string>\n    <string name=\"date_of_birth\">Data de nascimento</string>\n    <string name=\"title_phone\">Telefone</string>\n    <string name=\"phone_error_empty\">Informe um telefone!</string>\n    <string name=\"title_activity_inicial_screen\">InicialScreen</string>\n    <string name=\"title_cnpj\">CNPJ</string>\n    <string name=\"cnpj_error_empty\">Informe um CNPJ!</string>\n    <string name=\"cnpj_error_invalid\">CNPJ invÃ¡lido!</string>\n    <string name=\"gender_f\">Feminino</string>\n    <string name=\"gender_m\">Masculino</string>\n    <string name=\"lupa\">Lupa</string>\n    <string name=\"fruits\">Frutas</string>\n    <string name=\"vegetable\">Vegetais</string>\n    <string name=\"spices\">Temperos</string>\n    <string name=\"other\">Outros</string>\n    <string name=\"isBirthErrorEmpty\">Informe sua data de nascimento!</string>\n    <string name=\"titleBirth\">Data de nascimento</string>\n    <string name=\"all\">Todos</string>\n    <string name=\"discount\">Em desconto</string>\n    <string name=\"near\">Perto de vocÃª</string>\n    <string name=\"home\">Icone home</string>\n    <string name=\"profile\">Icone perfil</string>\n    <string name=\"fair\">Icone feira</string>\n    <string name=\"live\">Icone live</string>\n    <string name=\"title_activity_screen_search\">ScreenSearch</string>\n    <string name=\"back_screen\">Atalho para mudar de tela</string>\n    <string name=\"latest_search\">Ãšltimas pesquisas</string>\n    <string name=\"delete_search\">Deletar uma pesquisa</string>\n    <string name=\"title_activity_profile_client\">ProfileClient</string>\n    <string name=\"photo_profile\">Foto de perfil</string>\n    <string name=\"address\">EndereÃ§o</string>\n    <string name=\"edit_account\">Editar conta</string>\n    <string name=\"payment_methods\">Formas de pagamento</string>\n    <string name=\"purchase_history\">HistÃ³rico de compra</string>\n    <string name=\"logout\">Sair</string>\n    <string name=\"title_activity_edit_profile_sreen\">EditProfileSreen</string>\n    <string name=\"to_save\">Salvar</string>\n    <string name=\"title_activity_address\">AddressActivity</string>\n    <string name=\"title_activity_adresses\">AdressesActivity</string>\n    <string name=\"adresses\">EndereÃ§os</string>\n    <string name=\"main_adresses\">EndereÃ§o principal</string>\n    <string name=\"add_new_adress\">Adcione novos endereÃ§os clicando a baixo:</string>\n    <string name=\"to_add\">Adicionar</string>\n    <string name=\"title_activity_add_adress_acitivity\">AddAdressAcitivity</string>\n    <string name=\"choose_location\">Escolha o local</string>\n    <string name=\"details_address\">Detalhes do endereÃ§o</string>\n    <string name=\"name_address\">Nome do endereÃ§o</string>\n    <string name=\"name_of_recipient\">Nome de quem vai receber</string>\n    <string name=\"phone_address\">Telefone para contato</string>\n    <string name=\"cep_address\">CEP</string>\n    <string name=\"title_activity_buy_history_acitivity\">HistÃ³rico de Compras</string>\n    <string name=\"title_activity_payment_methods\">PaymentMethodsActivity</string>\n    <string name=\"title_payment_methods\">Formas de pagamento</string>\n    <string name=\"credit_card\">CartÃ£o de crÃ©dito</string>\n    <string name=\"title_activity_add_pay_methods_acitivity\">AddMetodoDePgmntAcitivity</string>\n    <string name=\"add_card_pay_methods\">Adicionar seu cartÃ£o</string>\n    <string name=\"name_card_pay_methods\">Nome no cartÃ£o</string>\n    <string name=\"number_card_pay_methods\">NÃºmero do cartÃ£o</string>\n    <string name=\"validity_card_pay_methods\">Data de validade</string>\n    <string name=\"add_card\">Add. cartÃ£o</string>\n    <string name=\"add_account\">Add. conta</string>\n    <string name=\"title_activity_add_account\">AddAccount</string>\n    <string name=\"add_account_pay_methods\">Adcionar sua conta</string>\n    <string name=\"fruits_result\">Frutas</string>\n    <string name=\"logout2\">Deslogar</string>\n    <string name=\"logout_text\">Tem certeza que deseja sair?</string>\n    <string name=\"title_activity_description_products\">DescriÃ§Ã£oProdutos</string>\n    <string name=\"description\">DescriÃ§Ã£o</string>\n    <string name=\"buy_now\">Comprar</string>\n    <string name=\"add_affection\">Add. ao carrinho</string>\n    <string name=\"title_activity_shopping_cart\">ShoppingCartActivity</string>\n    <string name=\"my_shopping_cart\">Meu carrinho</string>\n    <string name=\"date\">Data:</string>\n    <string name=\"promotion\">PromoÃ§Ã£o!</string>\n    <string name=\"pay\">Pagar</string>\n    <string name=\"title_activity_inicial_screen_marketer\">PÃ¡gina Inicial do Feirante</string>\n    <string name=\"title_activity_checkout\">Tela de recibo</string>\n    <string name=\"checkout\">Recibo</string>\n    <string name=\"change\">Mudar</string>\n    <string name=\"edit\">Editar</string>\n    <string name=\"delete_address\">Apagar endereÃ§o</string>\n    <string name=\"title_card_inicial_marketer\">COMECE A FATURAR COM A YVYPORÃƒ HOJE!</string>\n    <string name=\"description_card_inicial_marketer\">Comece adicionando seus produtos ou cadastre as feiras qual faz parte</string>\n    <string name=\"your_sales_today\">Sua atividade hoje</string>\n    <string name=\"history_complete\">Ver histÃ³rico de vendas completo</string>\n    <string name=\"total\">Total :</string>\n\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-pt-rBR/stringsBR.xml b/app/src/main/res/values-pt-rBR/stringsBR.xml
--- a/app/src/main/res/values-pt-rBR/stringsBR.xml	(revision 97ecd8c240e929cee640e41eda693090f23d5921)
+++ b/app/src/main/res/values-pt-rBR/stringsBR.xml	(date 1683115258857)
@@ -126,8 +126,11 @@
     <string name="title_card_inicial_marketer">COMECE A FATURAR COM A YVYPORÃƒ HOJE!</string>
     <string name="description_card_inicial_marketer">Comece adicionando seus produtos ou cadastre as feiras qual faz parte</string>
     <string name="your_sales_today">Sua atividade hoje</string>
-    <string name="history_complete">Ver histÃ³rico de vendas completo</string>
+    <string name="history_complete">Ver histÃ³rico completo</string>
     <string name="total">Total :</string>
+    <string name="payment_method">MÃ©todo de Pagamento</string>
+    <string name="order">Pedido</string>
+    <string name="delivery_fee">Taxa de entrega</string>
 
 
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/yvypora/ScreenClients/FairsActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@file:Suppress(\"NAME_SHADOWING\")\n\npackage com.example.yvypora.ScreenClients\n\nimport android.os.Bundle\nimport androidx.activity.ComponentActivity\nimport androidx.activity.compose.setContent\nimport androidx.compose.foundation.BorderStroke\nimport androidx.compose.foundation.Image\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.foundation.lazy.LazyColumn\nimport androidx.compose.foundation.lazy.items\nimport androidx.compose.material.Card\nimport androidx.compose.material.Icon\nimport androidx.compose.material.Text\nimport androidx.compose.runtime.*\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.res.colorResource\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.text.style.TextDecoration\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport androidx.compose.ui.zIndex\nimport com.example.yvypora.R\nimport com.example.yvypora.models.Fairs\nimport com.example.yvypora.ui.theme.YvyporaTheme\nimport com.google.android.gms.maps.model.CameraPosition\nimport com.google.android.gms.maps.model.LatLng\nimport com.google.maps.android.compose.GoogleMap\nimport com.google.maps.android.compose.Marker\nimport com.google.maps.android.compose.MarkerState\nimport com.google.maps.android.compose.rememberCameraPositionState\nimport java.time.LocalTime\nimport java.time.format.DateTimeFormatter\n\nclass FairsActivity : ComponentActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContent {\n            YvyporaTheme {\n            }\n        }\n    }\n}\n\nfun listLocationFair() = listOf<LatLng>(\n\n    LatLng(-23.55, -46.64),\n    LatLng(-23.2167, -44.7179),\n    LatLng(-21.55, -46.64),\n    LatLng(-20.55, -46.64),\n)\n\nfun listMarketerFair() = listOf<Fairs>(\n    Fairs(\n        id = 1,\n        photo = \"feira.png\",\n        name = \"Feira de Sampa\",\n        dayOfWork = \"Domingo\",\n        hourStartOfWork = 11,\n        minuteStartOfWork = 25,\n        hourEndOfWork = 18,\n        minuteEndOfWork = 30,\n        aproxUserCloser = 2,\n        ratingMarketer = 3.5\n    ),\n    Fairs(\n        id = 2,\n        photo = \"feira.png\",\n        name = \"Feira de Paraty\",\n        dayOfWork = \"Domingo\",\n        hourStartOfWork = 11,\n        minuteStartOfWork = 25,\n        hourEndOfWork = 18,\n        minuteEndOfWork = 30,\n        aproxUserCloser = 2,\n        ratingMarketer = 5.0\n    ),\n    Fairs(\n        id = 3,\n        photo = \"feira.png\",\n        name = \"Feira de Caconde\",\n        dayOfWork = \"Domingo\",\n        hourStartOfWork = 11,\n        minuteStartOfWork = 25,\n        hourEndOfWork = 18,\n        minuteEndOfWork = 30,\n        aproxUserCloser = 2,\n        ratingMarketer = 3.5\n    ),\n    Fairs(\n        id = 4,\n        photo = \"feira.png\",\n        name = \"Feira de CapitÃ³lio\",\n        dayOfWork = \"Domingo\",\n        hourStartOfWork = 11,\n        minuteStartOfWork = 25,\n        hourEndOfWork = 18,\n        minuteEndOfWork = 30,\n        aproxUserCloser = 2,\n        ratingMarketer = 3.5\n    )\n)\n\n\n@Composable\nfun ListOfFairs(fairs: List<Fairs>) {\n    LazyColumn(Modifier.fillMaxSize()) {\n        items(fairs) { Fairs -> FairsComponent(fair = Fairs) }\n    }\n}\n\n@Composable\nfun FairsComponent(fair: Fairs) {\n\n    val nameFair = fair.name\n//    val photoFair = fair.photo\n    val photoFair = painterResource(id = R.drawable.fair_photo)\n    val dayOfWork = fair.dayOfWork\n    val HourStartWork = fair.hourStartOfWork\n    val minuteStartWork = fair.minuteStartOfWork\n    val HourEndWork = fair.hourEndOfWork\n    val minuteEndWork = fair.minuteEndOfWork\n    val aproxUser = fair.aproxUserCloser\n    val rating = fair.ratingMarketer\n    val calendar = painterResource(id = R.drawable.calendartick)\n    val clock = painterResource(id = R.drawable.clock)\n    val user = painterResource(id = R.drawable.user)\n\n    Card(\n        Modifier.padding(10.dp),\n    ) {\n        Column(\n            Modifier\n                .fillMaxSize(),\n        ) {\n            Image(\n                painter = photoFair,\n                contentDescription = \"\",\n                modifier = Modifier\n                    .fillMaxWidth()\n                    .height(157.dp)\n            )\n            Row() {\n                Column(\n                    Modifier\n                        .fillMaxWidth(0.75f)\n                        .padding(start = 20.dp)) {\n                    Text(\n                        text = nameFair,\n                        color = colorResource(\n                            id = R.color.green_text_dark\n                        ),\n                        fontSize = 24.sp,\n                        fontWeight = FontWeight.Bold,\n                        textDecoration = TextDecoration.Underline\n\n                    )\n                    Column(Modifier.fillMaxWidth()) {\n                        Row() {\n                            Image(\n                                painter = calendar, contentDescription = \"\", modifier = Modifier\n                                    .height(30.dp)\n                                    .width(30.dp)\n                            )\n                            Text(\n                                text = dayOfWork, fontSize = 16.sp,\n                                color = colorResource(\n                                    id = R.color.green_text_dark\n                                )\n                            )\n                        }\n                        Row(verticalAlignment = Alignment.CenterVertically) {\n\n                            val timeStart = LocalTime.of(HourStartWork,minuteStartWork)\n                            val timeEnd = LocalTime.of(HourEndWork,minuteEndWork)\n                            val formatter = DateTimeFormatter.ofPattern(\"HH:mm\")\n\n\n\n                            Image(\n                                painter = clock, contentDescription = \"\", modifier = Modifier\n                                    .height(20.dp)\n                                    .width(30.dp)\n                            )\n                            Text(\n                                text = timeStart.format(formatter) + \"-\" + timeEnd.format(formatter),\n                                color = colorResource(\n                                    id = R.color.green_text_dark\n                                )\n                            )\n                        }\n                        Row(\n                            Modifier.padding(start = 5.dp),\n                            verticalAlignment = Alignment.CenterVertically\n                        ) {\n                            Image(\n                                painter = user, contentDescription = \"\", modifier = Modifier\n                                    .height(30.dp)\n                                    .width(20.dp)\n                            )\n                            Text(\n                                text = \"Aprox $aproxUser feirantes da Yvy\",\n                                Modifier.padding(start = 2.dp),\n                                color = colorResource(\n                                    id = R.color.green_text_dark\n                                )\n                            )\n                        }\n                    }\n                }\n\n                Row(\n                    Modifier.height(35.dp),\n                    verticalAlignment = Alignment.CenterVertically,\n                    horizontalArrangement = Arrangement.End\n                ) {\n                    Icon(\n                        painter = painterResource(id = R.drawable.star),\n                        contentDescription = \"\",\n                        tint = colorResource(\n                            id = R.color.yellow_star\n                        )\n                    )\n                    Text(\n                        text = rating.toString(),\n                        color = colorResource(\n                            id = R.color.green_text_dark\n                        )\n                    )\n                }\n            }\n        }\n\n\n    }\n    Box(\n        Modifier\n            .fillMaxWidth()\n            .height(1.dp)\n            .background(colorResource(id = R.color.green_yvy))\n            .padding(start = 100.dp)\n    )\n\n}\n\n\n@Preview(showBackground = true)\n@Composable\nfun FairPreview() {\n    YvyporaTheme() {\n        FairsActivity()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/yvypora/ScreenClients/FairsActivity.kt b/app/src/main/java/com/example/yvypora/ScreenClients/FairsActivity.kt
--- a/app/src/main/java/com/example/yvypora/ScreenClients/FairsActivity.kt	(revision 97ecd8c240e929cee640e41eda693090f23d5921)
+++ b/app/src/main/java/com/example/yvypora/ScreenClients/FairsActivity.kt	(date 1683122838934)
@@ -134,7 +134,8 @@
     val user = painterResource(id = R.drawable.user)
 
     Card(
-        Modifier.padding(10.dp),
+        Modifier.padding(6.dp),
+        elevation = 10.dp
     ) {
         Column(
             Modifier
Index: app/src/main/java/com/example/yvypora/ScreenClients/AdressesActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.yvypora.ScreenClients\n\nimport android.content.Intent\nimport android.location.Address\nimport android.os.Bundle\nimport androidx.activity.ComponentActivity\nimport androidx.activity.compose.setContent\nimport androidx.activity.viewModels\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.compose.foundation.*\nimport androidx.compose.foundation.gestures.Orientation\nimport androidx.compose.foundation.gestures.draggable\nimport androidx.compose.foundation.gestures.rememberDraggableState\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.foundation.lazy.LazyColumn\nimport androidx.compose.foundation.lazy.items\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.material.*\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.MoreVert\nimport androidx.compose.runtime.*\nimport androidx.compose.runtime.saveable.rememberSaveable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.res.colorResource\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.DpOffset\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport androidx.core.content.ContextCompat.startActivity\nimport com.example.yvypora.R\nimport com.example.yvypora.models.AddressCard\nimport com.example.yvypora.models.MarketerCardShopping\nimport com.example.yvypora.ui.theme.YvyporaTheme\n\nclass AdressesActivity : ComponentActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        setContent {\n            YvyporaTheme {\n                // A surface container using the 'background' color from the theme\n                Surface(\n                    modifier = Modifier.fillMaxSize(),\n                    color = MaterialTheme.colors.background\n                ) {\n                    Column(\n                        modifier = Modifier\n                            .fillMaxSize()\n                    ) {\n                        MainAddress()\n                    }\n                }\n            }\n        }\n    }\n}\n\n@Composable\nfun MainAddress() {\n    val context = LocalContext.current\n    Column(modifier = Modifier\n        .fillMaxWidth()\n        .fillMaxSize()\n    ) {\n        Row(\n            modifier = Modifier\n                .fillMaxWidth()\n                .padding(top = 30.dp, start = 15.dp, bottom = 15.dp),\n            horizontalArrangement = Arrangement.Center,\n            verticalAlignment = Alignment.CenterVertically\n\n        ) {\n            Image(\n                painter = painterResource(id = R.drawable.arrow),\n                modifier = Modifier\n                    .height(45.dp)\n                    .width(55.dp)\n                    .clickable {\n                        val intent = Intent(context, ProfileClient()::class.java)\n                        context.startActivity(intent)\n                    },\n                alignment = Alignment.BottomStart,\n                contentDescription = stringResource(id = R.string.back_screen)\n            )\n            Text(\n                text = stringResource(id = R.string.adresses),\n                modifier = Modifier\n                    .padding(bottom = 3.dp, end = 38.dp)\n                    .fillMaxWidth(),\n                fontSize = 24.sp,\n                color = colorResource(id = R.color.darkgreen_yvy),\n                textAlign = TextAlign.Center\n            )\n        }\n        Column(modifier = Modifier\n            .fillMaxSize()\n            .padding(top = 25.dp, start = 28.dp, end = 25.dp),\n            verticalArrangement = Arrangement.Center)\n        {\n            Spacer(modifier = Modifier.height(15.dp))\n            ListOfCardAddress(addresses = listAddress)\n            Text(\n                text = stringResource(id = R.string.add_new_adress),\n                modifier = Modifier\n                    .padding(bottom = 3.dp, top = 8.dp)\n                    .fillMaxWidth(),\n                fontSize = 16.sp,\n                color = colorResource(id = R.color.darkgreen_yvy),\n                textAlign = TextAlign.Center\n            )\n            Spacer(modifier = Modifier.height(15.dp))\n            Button(\n                onClick = {\n                    val intent = Intent(context, AddAdressAcitivity()::class.java)\n                    context.startActivity(intent)\n                },\n                colors = ButtonDefaults.buttonColors(Color(83, 141, 34)),\n                modifier = Modifier\n                    .width(200.dp)\n                    .height(48.dp)\n                    .align(Alignment.CenterHorizontally),\n                shape = RoundedCornerShape(5.dp),\n\n                ) {\n                Text(\n                    text = stringResource(id = R.string.to_add),\n                    color = Color.White,\n                    fontSize = 20.sp\n                )\n            }\n            Spacer(modifier = Modifier.height(15.dp))\n        }\n\n    }\n}\nclass AddressActivity : AppCompatActivity(){\n    private val viewModel: CheckOutViewModel by viewModels()\n\n    private fun onAddressSelected(address: Address){\n        viewModel.setMainAddress(address)\n    }\n}\nval listAddress= mutableStateListOf<AddressCard>(\n    AddressCard(\n        titulo = \"Casa\",\n        name_remetente = \"Carlos Arcanjo\",\n        telefone_remetente = \"(11) 954009469\",\n        rua = \"Rua Oscar Freire\",\n        numero = 126,\n        cidade = \"SÃ£o Paulo\",\n        estado = \"SÃ£o Paulo\",\n        pais = \"Brasil\",\n        endereÃ§o_principal = false,\n    ),\n    AddressCard(\n        titulo = \"EscritÃ³rio\",\n        name_remetente = \"Carlos Arcanjo\",\n        telefone_remetente = \"(11) 954009469\",\n        rua = \"BrÃ¡s\",\n        numero = 136,\n        cidade = \"SÃ£o Paulo\",\n        estado = \"SÃ£o Paulo\",\n        pais = \"Brasil\",\n        endereÃ§o_principal = false,\n    ),\n    AddressCard(\n        titulo = \"EscritÃ³rio\",\n        name_remetente = \"Carlos Arcanjo\",\n        telefone_remetente = \"(11) 954009469\",\n        rua = \"25 de marÃ§o\",\n        numero = 126,\n        cidade = \"SÃ£o Paulo\",\n        estado = \"SÃ£o Paulo\",\n        pais = \"Brasil\",\n        endereÃ§o_principal = false,\n    ),\n\n)\n@Composable\nfun ListOfCardAddress(addresses: List<AddressCard>) {\n    val modifierList = addresses.sortedByDescending { it.endereÃ§o_principal }\n    LazyColumn() {\n        items(modifierList) { address ->\n            if (address.endereÃ§o_principal) {\n                CardPrincipalAdresses(address = address)\n\n            } else {\n                CardAdresses(address = address)\n            }\n        }\n\n\n    }\n}\n\n@Composable\nfun CardPrincipalAdresses(address: AddressCard){\n    var titleAddress = address.titulo\n    var name_remetente = address.name_remetente\n    var telefone_remetente = address.telefone_remetente\n    var rua = address.rua\n    var numero = address.numero\n    var cidade = address.cidade\n    var estado = address.estado\n    var pais = address.pais\n    Column {\n        Row(\n            modifier = Modifier\n                .fillMaxWidth()\n                .padding(start = 190.dp, end = 7.dp)\n                .height(21.dp)\n                .background(\n                    color =\n                    colorResource(id = R.color.green_yvy),\n                    shape = RoundedCornerShape(\n                        topStart = 0.dp,\n                        topEnd = 10.dp,\n                        bottomEnd = 0.dp,\n                        bottomStart = 10.dp\n                    )\n                )\n                .border(\n                    width = 1.dp,\n                    color = colorResource(id = R.color.green_yvy),\n                    shape = RoundedCornerShape(\n                        topStart = 0.dp,\n                        topEnd = 10.dp,\n                        bottomEnd = 0.dp,\n                        bottomStart = 10.dp\n                    )\n                ),\n            horizontalArrangement = Arrangement.End,\n        ) {\n            Text(\n                text = stringResource(id = R.string.main_adresses),\n                modifier = Modifier\n                    .fillMaxWidth(),\n                fontSize = 12.sp,\n                textAlign = TextAlign.Center,\n                color = colorResource(id = R.color.green_camps)\n\n            )\n        }\n        Card(modifier = Modifier\n            .fillMaxWidth()\n            .padding(top = 2.dp)\n            .height(140.dp)\n            .border(\n                width = 2.dp,\n                color = colorResource(id = R.color.darkgreen_yvy),\n                shape = RoundedCornerShape(\n                    topStart = 0.dp,\n                    topEnd = 10.dp,\n                    bottomEnd = 0.dp,\n                    bottomStart = 10.dp\n                )\n            ),\n            backgroundColor = colorResource(id = R.color.green_camps),\n            shape = RoundedCornerShape(\n                topStart = 0.dp,\n                topEnd = 10.dp,\n                bottomEnd = 0.dp,\n                bottomStart = 10.dp\n            )\n        ) {\n            Column() {\n                Row(modifier = Modifier\n                    .padding(start = 15.dp, top = 12.dp),\n                    horizontalArrangement = Arrangement.Center,\n                    verticalAlignment = Alignment.CenterVertically\n                ) {\n                    Icon(\n                        painter = painterResource(id = R.drawable.house2),\n                        modifier = Modifier\n                            .width(28.dp)\n                            .height(28.dp)\n                        ,\n                        tint = colorResource(id = R.color.darkgreen_yvy),\n                        contentDescription = \"icon\"\n                    )\n                    Text(\n                        text = titleAddress,\n                        modifier = Modifier\n                            .padding(start = 6.dp),\n                        fontSize = 23.sp,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n                    )\n//                    OpcoesMenu()\n                }\n                Row(modifier = Modifier\n                    .padding(start = 15.dp, top = 5.dp),\n                    horizontalArrangement = Arrangement.Center,\n                    verticalAlignment = Alignment.CenterVertically\n                ){\n                    Text(\n                        text = name_remetente,\n                        modifier = Modifier\n                            .padding(start = 2.dp),\n                        fontSize = 15.sp,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n\n                    )\n                    Text(\n                        text = \" ${'-'} $telefone_remetente\",\n                        fontSize = 15.sp,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n\n                    )\n                }\n                Row(modifier = Modifier\n                    .padding(start = 15.dp, top = 5.dp),\n                    horizontalArrangement = Arrangement.Center,\n                    verticalAlignment = Alignment.CenterVertically\n                ){\n                    Text(\n                        text = rua,\n                        modifier = Modifier\n                            .padding(start = 2.dp),\n                        fontSize = 15.sp,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n                    )\n                    Text(\n                        text = \"$numero${','} \",\n                        modifier = Modifier\n                            .padding(start = 2.dp),\n                        fontSize = 15.sp,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n                    )\n                    Text(\n                        text = \" $cidade${','} \",\n                        modifier = Modifier\n                            .padding(start = 2.dp),\n                        fontSize = 15.sp,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n                    )\n                }\n\n                Row(modifier = Modifier\n                    .padding(start = 15.dp, top = 5.dp),\n                    horizontalArrangement = Arrangement.Center,\n                    verticalAlignment = Alignment.CenterVertically\n                ){\n                    Text(\n                        text = \" $estado${','} \",\n                        fontSize = 15.sp,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n                    )\n                    Text(\n                        text = pais,\n                        fontSize = 15.sp,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n                    )\n                }\n            }\n        }\n    }\n}\n@Composable\nfun CardAdresses(address : AddressCard){\n//    val dragState = rememberDraggableState(onDelta = { dy-> onDrag(address)})\nfun CardAdresses(address : AddressCard){\n    var titleAddress = address.titulo\n    var name_remetente = address.name_remetente\n    var telefone_remetente = address.telefone_remetente\n    var rua = address.rua\n    var numero = address.numero\n    var cidade = address.cidade\n    var estado = address.estado\n    var pais = address.pais\n\n    Box(modifier = Modifier\n        .fillMaxSize()\n        .padding(bottom = 15.dp)) {\n        Card(modifier = Modifier\n            .fillMaxWidth()\n            .padding(top = 2.dp)\n//            .draggable(\n//                state = dragState,\n//                orientation = Orientation.Vertical,\n//                onDragStopped = { onDrop(address) }\n//            )\n            .height(140.dp),\n            backgroundColor = colorResource(id = R.color.green_camps),\n            shape = RoundedCornerShape(\n                topStart = 0.dp,\n                topEnd = 10.dp,\n                bottomEnd = 0.dp,\n                bottomStart = 10.dp\n            )\n        ) {\n            Column() {\n                Row(modifier = Modifier\n                    .padding(start = 15.dp, top = 12.dp),\n                    horizontalArrangement = Arrangement.Center,\n                    verticalAlignment = Alignment.CenterVertically\n                ) {\n                    Icon(\n                        painter = painterResource(id = R.drawable.house2),\n                        modifier = Modifier\n                            .width(28.dp)\n                            .height(28.dp)\n                        ,\n                        tint = colorResource(id = R.color.darkgreen_yvy),\n                        contentDescription = \"icon\"\n                    )\n                    Text(\n                        text = titleAddress,\n                        modifier = Modifier\n                            .padding(start = 6.dp),\n                        fontSize = 23.sp,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n                    )\n\n                        OpcoesMenu()\n\n\n                }\n                Row(modifier = Modifier\n                    .padding(start = 15.dp, top = 5.dp),\n                    horizontalArrangement = Arrangement.Center,\n                    verticalAlignment = Alignment.CenterVertically\n                ){\n                    Text(\n                        text = name_remetente,\n                        modifier = Modifier\n                            .padding(start = 2.dp),\n                        fontSize = 15.sp,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n\n                    )\n                    Text(\n                        text = \" ${'-'} $telefone_remetente\",\n                        fontSize = 15.sp,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n\n                    )\n                }\n                Row(modifier = Modifier\n                    .padding(start = 15.dp, top = 5.dp),\n                    horizontalArrangement = Arrangement.Center,\n                    verticalAlignment = Alignment.CenterVertically\n                ){\n                    Text(\n                        text = rua,\n                        modifier = Modifier\n                            .padding(start = 2.dp),\n                        fontSize = 15.sp,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n                    )\n                    Text(\n                        text = \"$numero${','} \",\n                        modifier = Modifier\n                            .padding(start = 2.dp),\n                        fontSize = 15.sp,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n                    )\n                    Text(\n                        text = \"$cidade${','} \",\n                        modifier = Modifier\n                            .padding(start = 2.dp),\n                        fontSize = 15.sp,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n                    )\n                }\n\n                Row(modifier = Modifier\n                    .padding(start = 15.dp, top = 5.dp),\n                    horizontalArrangement = Arrangement.Center,\n                    verticalAlignment = Alignment.CenterVertically\n                ){\n                    Text(\n                        text = \"$estado${','} \",\n                        fontSize = 15.sp,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n                    )\n                    Text(\n                        text = pais,\n                        fontSize = 15.sp,\n                        color = colorResource(id = R.color.darkgreen_yvy)\n                    )\n                }\n            }\n        }\n    }\n}\n\n@Composable\nfun OpcoesMenu() {\n    val selectedAddress = remember { mutableStateOf(listAddress.first()) }\n//    var mainCard by remember { mutableStateOf(listAddress.firstOrNull()) }\n    var showPopup by remember { mutableStateOf(false) }\n    val context = LocalContext.current\n\n    Row(\n        modifier = Modifier\n            .fillMaxWidth(),\n        horizontalArrangement = Arrangement.End,\n        verticalAlignment = Alignment.Top\n    ) {\n        IconButton(\n            onClick = { showPopup = true },\n            modifier = Modifier\n                .height(40.dp)\n        ) {\n            Icon(\n                Icons.Filled.MoreVert,\n                contentDescription = \"Mais opÃ§Ãµes\",\n                tint = colorResource(id = R.color.green_options)\n            )\n        }\n\n        DropdownMenu(\n            expanded = showPopup,\n            offset = DpOffset(x = (20).dp, y = (5).dp),\n            onDismissRequest = { showPopup = false }\n        ) {\n            DropdownMenuItem(onClick = {\n                val intent = Intent(context, EditAddress::class.java)\n                intent.putExtra(\"formData\",ArrayList(listAddress))\n                context.startActivity(intent)\n            }) {\n                Text(\n                    text = stringResource(id = R.string.edit),\n                    color = colorResource(id = R.color.green_yvy)\n                )\n            }\n            DropdownMenuItem(\n                onClick = {}\n            ) {\n                Text(\n                    text = stringResource(id = R.string.delete_address),\n                    color = colorResource(id = R.color.green_yvy)\n                )\n            }\n        }\n    }\n\n}\n\n\n@Preview(showBackground = true)\n@Composable\nfun AdressesActivityPreview() {\n    YvyporaTheme {\n        Column(\n            modifier = Modifier\n                .fillMaxSize()\n        ) {\n            MainAddress()\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/yvypora/ScreenClients/AdressesActivity.kt b/app/src/main/java/com/example/yvypora/ScreenClients/AdressesActivity.kt
--- a/app/src/main/java/com/example/yvypora/ScreenClients/AdressesActivity.kt	(revision 97ecd8c240e929cee640e41eda693090f23d5921)
+++ b/app/src/main/java/com/example/yvypora/ScreenClients/AdressesActivity.kt	(date 1683111872843)
@@ -364,7 +364,7 @@
 @Composable
 fun CardAdresses(address : AddressCard){
 //    val dragState = rememberDraggableState(onDelta = { dy-> onDrag(address)})
-fun CardAdresses(address : AddressCard){
+
     var titleAddress = address.titulo
     var name_remetente = address.name_remetente
     var telefone_remetente = address.telefone_remetente
@@ -416,8 +416,8 @@
                         fontSize = 23.sp,
                         color = colorResource(id = R.color.darkgreen_yvy)
                     )
-
-                        OpcoesMenu()
+//
+//                        OpcoesMenu()
 
 
                 }
@@ -544,15 +544,15 @@
 }
 
 
-@Preview(showBackground = true)
-@Composable
-fun AdressesActivityPreview() {
-    YvyporaTheme {
-        Column(
-            modifier = Modifier
-                .fillMaxSize()
-        ) {
-            MainAddress()
-        }
-    }
-}
\ No newline at end of file
+//@Preview(showBackground = true)
+//@Composable
+//fun AdressesActivityPreview() {
+//    YvyporaTheme {
+//        Column(
+//            modifier = Modifier
+//                .fillMaxSize()
+//        ) {
+//            MainAddress()
+//        }
+//    }
+//}
\ No newline at end of file
