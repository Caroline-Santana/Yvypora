Index: app/src/main/java/com/example/yvypora/ScreenClients/FairsActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@file:Suppress(\"NAME_SHADOWING\")\n\npackage com.example.yvypora.ScreenClients\n\nimport android.os.Bundle\nimport androidx.activity.ComponentActivity\nimport androidx.activity.compose.setContent\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.foundation.lazy.LazyColumn\nimport androidx.compose.foundation.lazy.items\nimport androidx.compose.runtime.*\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport com.example.yvypora.models.Fairs\nimport com.example.yvypora.models.MarketerFairNear\nimport com.example.yvypora.ui.theme.YvyporaTheme\nimport com.google.android.gms.maps.model.CameraPosition\nimport com.google.android.gms.maps.model.LatLng\nimport com.google.maps.android.compose.GoogleMap\nimport com.google.maps.android.compose.Marker\nimport com.google.maps.android.compose.MarkerState\nimport com.google.maps.android.compose.rememberCameraPositionState\n\nclass FairsActivity : ComponentActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContent {\n            YvyporaTheme {\n                ListOfFairs(fairs = listMarketerFair())\n            }\n        }\n    }\n}\n\nfun listMarketerFair() = listOf<Fairs>(\n    Fairs(\n        latLng = LatLng(-23.55, -46.64),\n        title_marker = \"Feira de Teste\",\n        subtitle_marker = \"Feira de Teste\",\n        listMarketer = listOf(\n            MarketerFairNear(\n                photo = \"feira.png\",\n                name = \"Feira de Teste\",\n                dayOfWork = \"Domingo\",\n                timeOfWork = 11,\n                aproxUserCloser = 2,\n                ratingMarketer = 3.5\n            )\n        )\n    ),\n    Fairs(\n        latLng = LatLng(-22.55, -46.63),\n        title_marker = \"Feira de Teste\",\n        subtitle_marker = \"Feira de Teste\",\n        listMarketer = listOf(\n            MarketerFairNear(\n                photo = \"feira.png\",\n                name = \"Feira de Teste\",\n                dayOfWork = \"Domingo\",\n                timeOfWork = 11,\n                aproxUserCloser = 2,\n                ratingMarketer = 3.5\n            )\n        )\n    ),\n    Fairs(\n        latLng = LatLng(-20.55, -46.63),\n        title_marker = \"Feira de Teste\",\n        subtitle_marker = \"Feira de Teste\",\n        listMarketer = listOf(\n            MarketerFairNear(\n                photo = \"feira.png\",\n                name = \"Feira de Teste\",\n                dayOfWork = \"Domingo\",\n                timeOfWork = 11,\n                aproxUserCloser = 2,\n                ratingMarketer = 3.5\n            )\n        )\n    )\n)\n\n@Composable\nfun ListOfFairs(fairs: List<Fairs>) {\n    LazyColumn() {\n        items(fairs) { Fairs -> FairsComponent(fair = Fairs) }\n    }\n}\n\n@Composable\nfun ListOfMarketerFair(marketers: List<MarketerFairNear>) {\n    LazyColumn() {\n        items(marketers) { MarketerFairNear ->\n            MarketerFairNearComponent(marketer = MarketerFairNear)\n        }\n    }\n}\n\n@Composable\nfun MarketerFairNearComponent(marketer: MarketerFairNear) {\n\n\n}\n\n@Composable\nfun FairsComponent(fair: Fairs, locations: List<LatLng>) {\n\n    /*\n    * TODO :\n    *    - o mapa tá retorndo duas vezes pq tem duas latLong sendo informadas, porém\n    *    deveria retornar um mapa só e dois markers\n    * */\n\n\n    val LocalFair = fair.latLng\n    val TitleMarker = fair.title_marker\n    val SubTitleMarker = fair.subtitle_marker\n\n    val cameraPositionState = rememberCameraPositionState {\n        position = CameraPosition.fromLatLngZoom(LocalFair, 7f)\n    }\n    Column() {\n        GoogleMap(\n            modifier = Modifier\n                .fillMaxWidth()\n                .height(450.dp),\n            cameraPositionState = cameraPositionState\n        ) {\n            Marker(\n                state = MarkerState(position = LocalFair),\n                title = TitleMarker,\n                snippet = SubTitleMarker\n            )\n\n\n        }\n    }\n\n}\n\n\n@Preview(showBackground = true)\n@Composable\nfun FairPreview() {\n    YvyporaTheme() {\n        FairsActivity()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/yvypora/ScreenClients/FairsActivity.kt b/app/src/main/java/com/example/yvypora/ScreenClients/FairsActivity.kt
--- a/app/src/main/java/com/example/yvypora/ScreenClients/FairsActivity.kt	(revision 48c43a721a589a095a926f42545fafd75d51ed35)
+++ b/app/src/main/java/com/example/yvypora/ScreenClients/FairsActivity.kt	(date 1682506057672)
@@ -88,20 +88,20 @@
     }
 }
 
-@Composable
-fun ListOfMarketerFair(marketers: List<MarketerFairNear>) {
-    LazyColumn() {
-        items(marketers) { MarketerFairNear ->
-            MarketerFairNearComponent(marketer = MarketerFairNear)
-        }
-    }
-}
-
-@Composable
-fun MarketerFairNearComponent(marketer: MarketerFairNear) {
 
-
-}
+//fun ListOfMarketerFair(marketers: List<MarketerFairNear>) {
+//    LazyColumn() {
+//        items(marketers) { MarketerFairNear ->
+//            MarketerFairNearComponent(marketer = MarketerFairNear)
+//        }
+//    }
+//}
+//
+//@Composable
+//fun MarketerFairNearComponent(marketer: MarketerFairNear) {
+//
+//
+//}
 
 @Composable
 fun FairsComponent(fair: Fairs, locations: List<LatLng>) {
Index: .idea/shelf/Uncommitted_changes_before_Update_at_19_04_23_07_40_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_23_07_40_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_23_07_40_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_23_07_40_[Changes]/shelved.patch	(revision 48c43a721a589a095a926f42545fafd75d51ed35)
+++ /dev/null	(revision 48c43a721a589a095a926f42545fafd75d51ed35)
@@ -1,19 +0,0 @@
-Index: app/src/main/java/com/example/yvypora/FruitsResultActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.yvypora\n\nimport android.content.Intent\nimport android.os.Bundle\nimport android.util.Log\nimport androidx.activity.ComponentActivity\nimport androidx.activity.compose.setContent\nimport androidx.compose.foundation.BorderStroke\nimport androidx.compose.foundation.Image\nimport androidx.compose.foundation.clickable\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.foundation.lazy.LazyColumn\nimport androidx.compose.foundation.lazy.LazyRow\nimport androidx.compose.foundation.lazy.items\nimport androidx.compose.foundation.shape.CircleShape\nimport androidx.compose.material.*\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\n\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.res.colorResource\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport com.example.yvypora.models.MarketerCard\nimport com.example.yvypora.models.MarketerData\nimport com.example.yvypora.models.ProductCardSale\nimport com.example.yvypora.ui.theme.YvyporaTheme\n\nclass FruitsResultActivity : ComponentActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContent {\n            YvyporaTheme {\n                FruitsResultMain()\n            }\n        }\n\n    }\n}\n\n@Composable\nfun FruitsResultMain() {\n    Surface(modifier = Modifier.fillMaxSize()) {\n        Column(\n            Modifier.fillMaxSize()\n        ) {\n            Row(verticalAlignment = Alignment.CenterVertically, horizontalArrangement = Arrangement.SpaceBetween) {\n                Text(\n                    text = stringResource(id = R.string.fruits_result),\n                    Modifier.padding(start = 150.dp),\n                    textAlign = TextAlign.Center,\n                    color = colorResource(id = R.color.green_options),\n                    fontSize = 32.sp,\n                    fontWeight = FontWeight.Bold\n                )\n                Image(\n                    painter = painterResource(id = R.drawable.logo_no_name),\n                    modifier = Modifier\n                        .height(64.dp)\n                        .width(164.dp)\n                        .padding(start = 80.dp),\n                    contentDescription = \"logo\",\n                )\n            }\n            ListOfMarketerData(marketers = listMarketerData())\n        }\n\n    }\n}\n\nfun listMarketerData() = listOf<MarketerData>(\n    MarketerData(\n        name = \"Zé do Alfácil\",\n        photo = R.drawable.perfil,\n        products = listOf(\n            ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = false\n            ),\n            ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = true,\n            ),\n            ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = true,\n            ),\n            ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = false,\n            )\n        )\n    ),\n    MarketerData(\n        name = \"Zé da Manga\",\n        photo = R.drawable.perfil,\n        products = listOf(\n            ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = true\n            ), ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = true\n            ),\n            ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = true\n            ), ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = false\n\n            )\n        )\n    ),\n    MarketerData(\n        name = \"Zé da Manga\",\n        photo = R.drawable.perfil,\n        products = listOf(\n            ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = false\n            ), ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = true\n            ),\n            ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = false\n            ), ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = false\n            )\n        )\n    ),\n    MarketerData(\n        name = \"Zé da Manga\",\n        photo = R.drawable.perfil,\n        products = listOf(\n            ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = false\n            ), ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = true\n            ),\n            ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = false\n            ), ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = true\n            )\n        )\n    ),\n    MarketerData(\n        name = \"Zé da Manga\",\n        photo = R.drawable.perfil,\n        products = listOf(\n            ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = true\n            ), ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = true\n            ),\n            ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = true\n            ), ProductCardSale(\n                id = 1,\n                name = \"Manga\",\n                qntd_product = 3,\n                photo = 1,\n                type_weight = \"g\",\n                weight_product = 800,\n                price = 24.00,\n                promo = true\n            )\n        )\n    )\n)\n\n@Composable\nfun ListOfMarketerData(marketers: List<MarketerData>) {\n    LazyColumn() {\n        items(marketers) { marketerData -> DataMarketer(marketer = marketerData) }\n    }\n}\n\n@Composable\nfun DataMarketer(marketer: MarketerData) {\n    val nameMarketer = marketer.name\n//        var photoMarketer = marketer.photo\n    val photoMarketer = painterResource(id = R.drawable.perfil)\n    Column(\n        Modifier\n            .fillMaxSize()\n            .padding(10.dp)\n    ) {\n        Card(\n            Modifier.fillMaxHeight(),\n        ) {\n            Column(\n                horizontalAlignment = Alignment.CenterHorizontally,\n            ) {\n                Row(Modifier.fillMaxSize(), verticalAlignment = Alignment.CenterVertically) {\n                    Image(\n                        painter = photoMarketer,\n                        contentDescription = \"\",\n                        modifier = Modifier\n                            .height(32.dp)\n                            .width(32.dp)\n\n                    )\n                    Text(\n                        text = nameMarketer,\n                        Modifier.padding(start = 11.dp),\n                        color = colorResource(id = R.color.green_yvy_title),\n\n                        )\n                }\n                Card(\n                    border = BorderStroke(\n                        1.dp,\n                        colorResource(id = R.color.transparentgreen_yvy)\n                    )\n                ) {\n                    ListOfProductData(products = marketer.products)\n                }\n            }\n        }\n    }\n}\n\n@Composable\nfun ListOfProductData(products: List<ProductCardSale>) {\n    LazyRow() {\n        items(products) { productsData -> DataProduct(product = productsData) }\n    }\n}\n\n@Composable\nfun DataProduct(product: ProductCardSale) {\n//        val context = LocalContext.current\n    var nameProduct = product.name\n//    var photoProduct = card.photo\n    var typeProduct = product.type_weight\n    var photoProduct = painterResource(id = R.drawable.abobora)\n    var qntProduct = product.qntd_product\n    var priceProduct = product.price\n    var promoProduct = product.promo\n\n//    if(promoProduct !== false){\n//        Column() {\n//        }\n//    }\n\n    Card(\n        elevation = 10.dp,\n        contentColor = colorResource(id = R.color.darkgreen_yvy),\n        modifier = Modifier\n            .width(130.dp)\n            .height(145.dp)\n//            .clickable {\n//                val intent = Intent(context, DescriptionProducts()::class.java)\n//                context.startActivity(intent)\n//            }\n            .padding(3.dp),\n        border = BorderStroke(1.dp, colorResource(id = R.color.transparentgreen_yvy))\n\n    ) {\n        Column {\n            Column(\n                modifier = Modifier.fillMaxWidth(),\n                horizontalAlignment = Alignment.CenterHorizontally,\n\n            ) {\n                Text(\n                    text = nameProduct,\n                    modifier = Modifier.padding(top = 4.dp),\n                    fontWeight = FontWeight.Bold,\n                    fontSize = 14.sp\n                )\n\n\n                // MODIFICAR PARA USAR URL\n                Image(\n                    painter = photoProduct,\n                    contentDescription = \"Product\",\n                    modifier = Modifier\n                        .width(97.dp)\n                        .height(70.dp),\n                )\n            }\n            Box(modifier = Modifier.fillMaxWidth()) {\n                Text(\n                    text = qntProduct.toString() + typeProduct,\n                    modifier = Modifier.padding(top = 2.dp, start = 4.dp),\n                    color = colorResource(id = R.color.dark_gray),\n                    fontWeight = FontWeight.Bold,\n                    textAlign = TextAlign.Left,\n                    fontSize = 12.sp\n                )\n                Row(\n                    horizontalArrangement = Arrangement.Center\n                ) {\n                    Text(\n                        text = \"R$$priceProduct\",\n                        modifier = Modifier.padding(top = 20.dp, start = 12.dp, end = 15.dp),\n                        fontWeight = FontWeight.Bold,\n                        textAlign = TextAlign.Left,\n                        fontSize = 14.sp\n                    )\n                    OutlinedButton(\n                        onClick = { },\n                        modifier = Modifier.size(40.dp),\n                        shape = CircleShape,\n                        border = BorderStroke(5.dp, colorResource(id = R.color.darkgreen_yvy)),\n                        contentPadding = PaddingValues(0.dp),\n                        colors = ButtonDefaults.outlinedButtonColors(\n                            backgroundColor = colorResource(\n                                id = R.color.darkgreen_yvy\n                            )\n                        )\n                    ) {\n                        // Adding an Icon \"Add\" inside the Button\n                        Icon(\n                            painter = painterResource(id = R.drawable.shopping_cart),\n                            modifier = Modifier.padding(start = 3.dp),\n                            contentDescription = \"content description\",\n                            tint = Color.White\n                        )\n                    }\n                }\n            }\n        }\n    }\n/*\n*  TODO:\n*   - Add navbar\n* */\n}\n\n@Preview(showBackground = true)\n@Composable\nfun FruitsPreview() {\n    YvyporaTheme() {\n        FruitsResultMain()\n    }\n\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/yvypora/FruitsResultActivity.kt b/app/src/main/java/com/example/yvypora/FruitsResultActivity.kt
---- a/app/src/main/java/com/example/yvypora/FruitsResultActivity.kt	(revision c0bd8fd0b718fed14153b93257480e4e4f4e921d)
-+++ b/app/src/main/java/com/example/yvypora/FruitsResultActivity.kt	(date 1681900392799)
-@@ -402,8 +402,6 @@
-                     fontWeight = FontWeight.Bold,
-                     fontSize = 14.sp
-                 )
--
--
-                 // MODIFICAR PARA USAR URL
-                 Image(
-                     painter = photoProduct,
Index: .idea/shelf/Uncommitted_changes_before_Update_at_19_04_23_07_40__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_23_07_40__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_23_07_40__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_23_07_40__Changes_.xml	(revision 48c43a721a589a095a926f42545fafd75d51ed35)
+++ /dev/null	(revision 48c43a721a589a095a926f42545fafd75d51ed35)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_19_04_23_07_40_[Changes]" date="1681900900709" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_23_07_40_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 19/04/23 07:40 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
deleted file mode 100644
--- a/.idea/deploymentTargetDropDown.xml	(revision 48c43a721a589a095a926f42545fafd75d51ed35)
+++ /dev/null	(revision 48c43a721a589a095a926f42545fafd75d51ed35)
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="deploymentTargetDropDown">
-    <runningDeviceTargetSelectedWithDropDown>
-      <Target>
-        <type value="RUNNING_DEVICE_TARGET" />
-        <deviceKey>
-          <Key>
-            <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="$USER_HOME$/.android/avd/Gerson3000.avd" />
-          </Key>
-        </deviceKey>
-      </Target>
-    </runningDeviceTargetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2023-04-24T12:30:32.880301Z" />
-  </component>
-</project>
\ No newline at end of file
